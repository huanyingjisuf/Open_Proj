<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\_build\nrf51422_xxac_s110.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\_build\nrf51422_xxac_s110.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Thu Aug 05 17:04:08 2021
<BR><P>
<H3>Maximum Stack Usage =        892 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
nus_data_handler &rArr; Data_Input &rArr; BLE_DAT_SW &rArr; BLE_Dat_Select &rArr; Add_Information_Run &rArr; Add_Flash_PassWord &rArr; Ev_Cat_Dat &rArr; SpiFlash_Read_Data &rArr; SpiFlash_Write_CMD &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[41]">__asm___11_nrf_delay_c_532987f3__nrf_delay_us</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[41]">__asm___11_nrf_delay_c_532987f3__nrf_delay_us</a><BR>
 <LI><a href="#[46]">__asm___7_speak_c_4ad3d500__nrf_delay_us</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[46]">__asm___7_speak_c_4ad3d500__nrf_delay_us</a><BR>
 <LI><a href="#[43]">__asm___8_W25Q32_C_40528c18__nrf_delay_us</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[43]">__asm___8_W25Q32_C_40528c18__nrf_delay_us</a><BR>
 <LI><a href="#[45]">__asm___10_Flash_RW_c_445f4bf8__nrf_delay_us</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[45]">__asm___10_Flash_RW_c_445f4bf8__nrf_delay_us</a><BR>
 <LI><a href="#[48]">__asm___11_stm8_eval_c_868ffd43__nrf_delay_us</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[48]">__asm___11_stm8_eval_c_868ffd43__nrf_delay_us</a><BR>
 <LI><a href="#[49]">__asm___8_MPR121_C_9b5df030__nrf_delay_us</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[49]">__asm___8_MPR121_C_9b5df030__nrf_delay_us</a><BR>
 <LI><a href="#[44]">__asm___8_BL5372_C_e370d2a4__nrf_delay_us</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[44]">__asm___8_BL5372_C_e370d2a4__nrf_delay_us</a><BR>
 <LI><a href="#[42]">__asm___11_app_timer_c_cd27f9c3__nrf_delay_us</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[42]">__asm___11_app_timer_c_cd27f9c3__nrf_delay_us</a><BR>
 <LI><a href="#[2]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">NMI_Handler</a><BR>
 <LI><a href="#[3]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">HardFault_Handler</a><BR>
 <LI><a href="#[4]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">SVC_Handler</a><BR>
 <LI><a href="#[5]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">PendSV_Handler</a><BR>
 <LI><a href="#[6]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">SysTick_Handler</a><BR>
 <LI><a href="#[d]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d]">ADC_IRQHandler</a><BR>
 <LI><a href="#[15c]">store_operation_execute</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[14e]">sm_state_change</a><BR>
 <LI><a href="#[15a]">clear_operation_execute</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[14e]">sm_state_change</a><BR>
 <LI><a href="#[155]">flash_write</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[14f]">flash_api_err_code_process</a><BR>
 <LI><a href="#[151]">state_data_erase_entry_run</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[150]">flash_page_erase</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[d]">ADC_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[15]">CCM_AAR_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[14]">ECB_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[c]">GPIOTE_IRQHandler</a> from nrf_drv_gpiote.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[3]">HardFault_Handler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[32]">LEDR_Close_Timer_Hander</a> from speak.o(.text) referenced from speak.o(.text)
 <LI><a href="#[19]">LPCOMP_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[33]">Moto_Timer_Hander</a> from key_run.o(.text) referenced from key_run.o(.text)
 <LI><a href="#[2]">NMI_Handler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[7]">POWER_CLOCK_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[5]">PendSV_Handler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[18]">QDEC_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[8]">RADIO_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[13]">RNG_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[11]">RTC0_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[17]">RTC1_IRQHandler</a> from app_timer.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[28]">Read_Key</a> from main.o(.text) referenced from main.o(.text)
 <LI><a href="#[1]">Reset_Handler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[a]">SPI0_TWI0_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[b]">SPI1_TWI1_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[4]">SVC_Handler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[1a]">SWI0_IRQHandler</a> from app_timer.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[1b]">SWI1_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[1c]">SWI2_IRQHandler</a> from softdevice_handler.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[1d]">SWI3_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[1e]">SWI4_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[1f]">SWI5_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[6]">SysTick_Handler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[2c]">SystemInit</a> from system_nrf51.o(.text) referenced from arm_startup_nrf51.o(.text)
 <LI><a href="#[12]">TEMP_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[e]">TIMER0_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[f]">TIMER1_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[10]">TIMER2_IRQHandler</a> from speak.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[29]">Timer_1_Handler</a> from main.o(.text) referenced from main.o(.text)
 <LI><a href="#[9]">UART0_IRQHandler</a> from nrf_drv_uart.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[2a]">Uart_Close_Hander</a> from main.o(.text) referenced from main.o(.text)
 <LI><a href="#[16]">WDT_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[2d]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from arm_startup_nrf51.o(.text)
 <LI><a href="#[24]">ble_evt_dispatch</a> from main.o(.text) referenced from main.o(.text)
 <LI><a href="#[34]">bsp_button_event_handler</a> from bsp.o(.text) referenced 5 times from bsp.o(.constdata)
 <LI><a href="#[26]">bsp_event_handler</a> from main.o(.text) referenced from main.o(.text)
 <LI><a href="#[2b]">button_timer_handler</a> from bsp.o(.text) referenced from bsp.o(.text)
 <LI><a href="#[23]">conn_params_error_handler</a> from main.o(.text) referenced from main.o(.text)
 <LI><a href="#[3c]">data_page_erase_state_run</a> from pstorage.o(.text) referenced from pstorage.o(.constdata)
 <LI><a href="#[3b]">data_to_swap_write_state_run</a> from pstorage.o(.text) referenced from pstorage.o(.constdata)
 <LI><a href="#[30]">detection_delay_timeout_handler</a> from app_button.o(.text) referenced from app_button.o(.text)
 <LI><a href="#[2f]">gpiote_event_handler</a> from app_button.o(.text) referenced from app_button.o(.text)
 <LI><a href="#[3e]">head_restore_state_run</a> from pstorage.o(.text) referenced from pstorage.o(.constdata)
 <LI><a href="#[20]">main</a> from main.o(.text) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[27]">my_timer_handler</a> from main.o(.text) referenced from main.o(.text)
 <LI><a href="#[21]">nus_data_handler</a> from main.o(.text) referenced from main.o(.text)
 <LI><a href="#[25]">on_adv_evt</a> from main.o(.text) referenced 3 times from main.o(.text)
 <LI><a href="#[22]">on_conn_params_evt</a> from main.o(.text) referenced from main.o(.text)
 <LI><a href="#[31]">softdevice_assertion_handler</a> from softdevice_handler.o(.text) referenced from softdevice_handler.o(.text)
 <LI><a href="#[37]">state_erase_data_page_entry_run</a> from pstorage.o(.text) referenced from pstorage.o(.constdata)
 <LI><a href="#[39]">state_restore_head_entry_run</a> from pstorage.o(.text) referenced from pstorage.o(.constdata)
 <LI><a href="#[38]">state_restore_tail_entry_run</a> from pstorage.o(.text) referenced from pstorage.o(.constdata)
 <LI><a href="#[35]">state_swap_erase_entry_run</a> from pstorage.o(.text) referenced from pstorage.o(.constdata)
 <LI><a href="#[36]">state_write_data_swap_entry_run</a> from pstorage.o(.text) referenced from pstorage.o(.constdata)
 <LI><a href="#[3a]">swap_erase_state_run</a> from pstorage.o(.text) referenced from pstorage.o(.constdata)
 <LI><a href="#[3d]">tail_restore_state_run</a> from pstorage.o(.text) referenced from pstorage.o(.constdata)
 <LI><a href="#[2e]">update_timeout_handler</a> from ble_conn_params.o(.text) referenced from ble_conn_params.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[2d]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(.text)
</UL>
<P><STRONG><a name="[292]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[3f]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[291]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[293]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[294]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[295]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[296]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[297]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[41]"></a>__asm___11_nrf_delay_c_532987f3__nrf_delay_us</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, nrf_delay.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___11_nrf_delay_c_532987f3__nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___11_nrf_delay_c_532987f3__nrf_delay_us
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
</UL>

<P><STRONG><a name="[42]"></a>__asm___11_app_timer_c_cd27f9c3__nrf_delay_us</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, app_timer.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___11_app_timer_c_cd27f9c3__nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___11_app_timer_c_cd27f9c3__nrf_delay_us
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compare_reg_update
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc1_stop
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc1_start
</UL>

<P><STRONG><a name="[43]"></a>__asm___8_W25Q32_C_40528c18__nrf_delay_us</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, w25q32.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___8_W25Q32_C_40528c18__nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_CMD_init
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___8_W25Q32_C_40528c18__nrf_delay_us
</UL>

<P><STRONG><a name="[44]"></a>__asm___8_BL5372_C_e370d2a4__nrf_delay_us</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, bl5372.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___8_BL5372_C_e370d2a4__nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLI2C_delay
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___8_BL5372_C_e370d2a4__nrf_delay_us
</UL>

<P><STRONG><a name="[45]"></a>__asm___10_Flash_RW_c_445f4bf8__nrf_delay_us</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, flash_rw.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___10_Flash_RW_c_445f4bf8__nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Busy
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___10_Flash_RW_c_445f4bf8__nrf_delay_us
</UL>

<P><STRONG><a name="[46]"></a>__asm___7_speak_c_4ad3d500__nrf_delay_us</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, speak.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___7_speak_c_4ad3d500__nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_abus_byte
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_Cl
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_Di
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_Ok
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_Error
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___7_speak_c_4ad3d500__nrf_delay_us
</UL>

<P><STRONG><a name="[47]"></a>__asm___13_simple_uart_c_5dda6715__nrf_delay_us</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, simple_uart.o(.emb_text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___13_simple_uart_c_5dda6715__nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simple_uart_get_with_timeout
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___13_simple_uart_c_5dda6715__nrf_delay_us
</UL>

<P><STRONG><a name="[48]"></a>__asm___11_stm8_eval_c_868ffd43__nrf_delay_us</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm8_eval.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___11_stm8_eval_c_868ffd43__nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___11_stm8_eval_c_868ffd43__nrf_delay_us
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>

<P><STRONG><a name="[49]"></a>__asm___8_MPR121_C_9b5df030__nrf_delay_us</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, mpr121.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___8_MPR121_C_9b5df030__nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_delay
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___8_MPR121_C_9b5df030__nrf_delay_us
</UL>

<P><STRONG><a name="[4a]"></a>assert_nrf_callback</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = assert_nrf_callback
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_assertion_handler
</UL>

<P><STRONG><a name="[4e]"></a>BLE_TX_Run</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = BLE_TX_Run &rArr; ble_nus_string_send
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_nus_string_send
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Manual_Add_Card_ACK
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EX_BLE_ACK_Run
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mate_Command_Run
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time_Ref_Run
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Time_Run
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_OpenLock_Run
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Information_Run
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Information_Run
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_A_PassWord_Run
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Mate_Run
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_OP_Door_note
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TX_Door_note
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_Door_note
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Normally_Open_Door_Run
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;More_Act_PassWord_Mode_Run
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_A_More_Act_PassWord_Run
</UL>

<P><STRONG><a name="[54]"></a>Dis_Conner</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Dis_Conner
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_timer_handler
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_DAT_SW
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_Dat_Select
</UL>

<P><STRONG><a name="[63]"></a>SKY1311_RC_VALUE</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = SKY1311_RC_VALUE &rArr; Spi_Flash_Init &rArr; SPI_Flash_Start &rArr; spi_master_init &rArr; nrf_gpio_cfg_input &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311Reset
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311RCFreqCali
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpr121_Run
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;irqClearAll
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSM12_Init
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Flash_Sleep
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Flash_Init
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_timer_handler
</UL>

<P><STRONG><a name="[6d]"></a>CL_LED_Cheak_RC_Value</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = CL_LED_Cheak_RC_Value &rArr; Spi_Flash_Init &rArr; SPI_Flash_Start &rArr; spi_master_init &rArr; nrf_gpio_cfg_input &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311Reset
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311RCFreqCali
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;irqClearAll
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Flash_Sleep
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Flash_Init
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKY1311_State
</UL>

<P><STRONG><a name="[26]"></a>bsp_event_handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[6e]"></a>Marnual_Add_Run</STRONG> (Thumb, 596 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 444<LI>Call Chain = Marnual_Add_Run &rArr; Add_Flash_US_TypeB_Data &rArr; Ev_Cat_Dat &rArr; SpiFlash_Read_Data &rArr; SpiFlash_Write_CMD &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_speak
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Flash_Sleep
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Flash_Init
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_PowerDown
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Manual_Add_Card_ACK
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Flash_US_TypeB_Data
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Flash_US_TypeA_Data
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Flash_AD_TypeB_Data
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Flash_AD_TypeA_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_event_handler_O
</UL>

<P><STRONG><a name="[78]"></a>Start_Key_Run</STRONG> (Thumb, 252 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = Start_Key_Run &rArr; AC_advertising_init &rArr; ble_advertising_init &rArr; ble_advdata_set &rArr; adv_data_encode &rArr; uuid_list_encode &rArr; uuid_list_sized_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311Reset
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;irqClearAll
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkCardInit
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_start
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSM12_Exit_Sleep_Mode
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Flash_Sleep
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Flash_Init
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_advertising_init
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_params_init
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_event_handler_O
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Manual_Add_Card
</UL>

<P><STRONG><a name="[7d]"></a>bsp_event_handler_O</STRONG> (Thumb, 2672 bytes, Stack size 24 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 516<LI>Call Chain = bsp_event_handler_O &rArr; Data_Card_Run &rArr; Ev_Cat_Dat &rArr; SpiFlash_Read_Data &rArr; SpiFlash_Write_CMD &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311Reset
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311ReadReg
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpr121_Run
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;irqClearAll
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_speak
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkCardInit
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkCardDeinit
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_start
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Type_B_Rrun
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Type_A_Rrun
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Type_A_Null_Key_Rrun
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time_to_Unix
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSM12_Exit_Sleep_Mode
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Flash_Sleep
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Flash_Init
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Need_TypeB_Data_SN
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Need_TypeA_Data_SN
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock_Open
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Time
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Devic_static_read
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Card_Run
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADD_Op_Door_Note
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Key_Run
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Marnual_Add_Run
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_read
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_advertising_init
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_params_init
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_input
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_button_event_handler
</UL>

<P><STRONG><a name="[8d]"></a>SKY1311_State</STRONG> (Thumb, 290 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = SKY1311_State &rArr; app_timer_start &rArr; timer_start_op_schedule &rArr; user_op_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311Reset
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;irqClearAll
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkCardRemove
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkCardInit
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Flash_Sleep
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Flash_Init
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_LED_Cheak_RC_Value
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_1_Handler
</UL>

<P><STRONG><a name="[91]"></a>ref_BLE_Adv</STRONG> (Thumb, 338 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = ref_BLE_Adv &rArr; advertising_init &rArr; ble_advertising_init &rArr; ble_advdata_set &rArr; adv_data_encode &rArr; uuid_list_encode &rArr; uuid_list_sized_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;advertising_init
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_advertising_init
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_params_init
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_1_Handler
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Key
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mate_Command_Run
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Mate_Run
</UL>

<P><STRONG><a name="[29]"></a>Timer_1_Handler</STRONG> (Thumb, 228 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = Timer_1_Handler &rArr; ref_BLE_Adv &rArr; advertising_init &rArr; ble_advertising_init &rArr; ble_advdata_set &rArr; adv_data_encode &rArr; uuid_list_encode &rArr; uuid_list_sized_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_speak
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Flash_Sleep
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Flash_Init
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_PowerDown
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Busy
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Erase_Sector
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erase_US_TypeB_Sector
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erase_US_TypeA_Sector
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erase_AD_TypeB_Sector
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erase_AD_TypeA_Sector
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Devic_static_read
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_Flash_PassWord
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_Flash_OPEN_DOOR_NOTE
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_FlashWord_Num
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ref_BLE_Adv
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKY1311_State
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_read
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[9b]"></a>uart_init</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simple_uart_config
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
</UL>

<P><STRONG><a name="[9d]"></a>Uart_Start_TC</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Uart_Start_TC &rArr; app_timer_start &rArr; timer_start_op_schedule &rArr; user_op_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simple_uart_config
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Put_String
</UL>

<P><STRONG><a name="[be]"></a>close_uart</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Close_Hander
</UL>

<P><STRONG><a name="[9e]"></a>advertising_IDLE_Init</STRONG> (Thumb, 112 bytes, Stack size 168 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_init
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>

<P><STRONG><a name="[a3]"></a>mac_set</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>

<P><STRONG><a name="[a5]"></a>read_a_key</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_speak
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPR121_Key_Run
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_read
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
</UL>

<P><STRONG><a name="[a7]"></a>PassWord_Con</STRONG> (Thumb, 1162 bytes, Stack size 32 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = PassWord_Con &rArr; SPIFlash_Read_Tab &rArr; SpiFlash_Read_Data &rArr; SpiFlash_Write_CMD &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_to_Block_Page
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Read_Tab
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pass_Word_Run
</UL>

<P><STRONG><a name="[aa]"></a>Pass_Word_Run</STRONG> (Thumb, 1860 bytes, Stack size 40 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = Pass_Word_Run &rArr; Once_Act_PassWord_Verify &rArr; Act_PassWord_Save &rArr; More_Act_PassWord_Save &rArr; Ev_Cat_Dat &rArr; SpiFlash_Read_Data &rArr; SpiFlash_Write_CMD &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_speak
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;des_psw
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time_to_Unix
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Flash_Sleep
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Flash_Init
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_PowerDown
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Per_Act_PassWord_Verify
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Per_Act_PassWord_Save
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Once_Act_PassWord_Verify
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;More_Act_PassWord_Verify
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock_Open
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Time
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Cat_Dat
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Devic_static_read
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Act_PassWord_Verify
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Act_PassWord_Save
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADD_Op_Door_Note
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PassWord_Con
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_read
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_input
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Key
</UL>

<P><STRONG><a name="[b7]"></a>sky1311_In_Read</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_read
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311_run
</UL>

<P><STRONG><a name="[b8]"></a>sky1311_Init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = sky1311_Init &rArr; Spi_Flash_Init &rArr; SPI_Flash_Start &rArr; spi_master_init &rArr; nrf_gpio_cfg_input &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_Init
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Flash_Sleep
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Flash_Init
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ba]"></a>sky1311_Read</STRONG> (Thumb, 202 bytes, Stack size 8 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311Reset
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311ReadReg
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311RCFreqCali
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;irqClearAll
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkCardRemove
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkCardInit
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkCardDeinit
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Type_B_Rrun
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Type_A_Rrun
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMS
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_read
</UL>

<P><STRONG><a name="[bc]"></a>sky1311_run</STRONG> (Thumb, 332 bytes, Stack size 0 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_Init
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311Reset
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311ReadReg
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311RCFreqCali
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;irqClearAll
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkCardRemove
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkCardInit
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkCardDeinit
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Type_B_Rrun
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Type_A_Rrun
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Flash_Init
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMS
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311_In_Read
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_read
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
</UL>

<P><STRONG><a name="[bd]"></a>CL_SKY1311_IRQ</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = CL_SKY1311_IRQ &rArr; irqClearAll &rArr; sky1311WriteReg &rArr; SPIByteCom &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;irqClearAll
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Flash_Sleep
</UL>

<P><STRONG><a name="[2a]"></a>Uart_Close_Hander</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Uart_Close_Hander &rArr; app_timer_stop &rArr; timer_stop_op_schedule &rArr; user_op_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Controllable_Power_Off
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close_uart
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[c0]"></a>FD_Key_Run</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = FD_Key_Run &rArr; input_speak &rArr; PS_LED_Run &rArr; Uart_Put_String &rArr; Uart_Start_TC &rArr; app_timer_start &rArr; timer_start_op_schedule &rArr; user_op_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_speak
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_read
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[20]"></a>main</STRONG> (Thumb, 582 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = main &rArr; ref_BLE_Adv &rArr; advertising_init &rArr; ble_advertising_init &rArr; ble_advdata_set &rArr; adv_data_encode &rArr; uuid_list_encode &rArr; uuid_list_sized_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_init
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311Reset
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;irqClearAll
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkCardInit
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_start
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auart_init
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_init
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSM12_Init
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Flash_Sleep
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Flash_Init
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_PowerDown
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF_WDT_Init
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF_WDT_Feed
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOCK_OPEN_Init
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bsp_Set
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FD_Key_Run
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311_Init
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ref_BLE_Adv
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKY1311_RC_VALUE
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_manage
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buttons_leds_init
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;advertising_init
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conn_params_init
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;services_init
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_params_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[c8]"></a>F_Print_Input_Ps_Run</STRONG> (Thumb, 314 bytes, Stack size 8 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Get_String
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_PS_Lmage
</UL>

<P><STRONG><a name="[cb]"></a>PS_Print_Run</STRONG> (Thumb, 1300 bytes, Stack size 8 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_speak
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Put_String
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Flash_Sleep
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Flash_Init
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_PowerDown
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Opinion_PS_Print_Valid
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock_Open
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;F_print_Goto_Sleep
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Controllable_Power_Off
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADD_Op_Door_Note
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>

<P><STRONG><a name="[d0]"></a>CL_PS_Print_Run</STRONG> (Thumb, 1028 bytes, Stack size 8 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Put_String
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;F_print_Goto_Sleep
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Controllable_Power_Off
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Controllable_Power_No
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>

<P><STRONG><a name="[298]"></a>bsp_buttons_state_get</STRONG> (Thumb, 54 bytes, Stack size 12 bytes, bsp.o(.text), UNUSED)

<P><STRONG><a name="[dc]"></a>bsp_button_is_pressed</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, bsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = bsp_button_is_pressed
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startup_event_extract
</UL>

<P><STRONG><a name="[59]"></a>bsp_indication_set</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bsp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_indication_text_set
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_ble_evt
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_adv_evt
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_mode_enter
</UL>

<P><STRONG><a name="[d2]"></a>bsp_indication_text_set</STRONG> (Thumb, 18 bytes, Stack size 12 bytes, bsp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_indication_set
</UL>

<P><STRONG><a name="[d3]"></a>bsp_event_to_button_action_assign</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, bsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = bsp_event_to_button_action_assign
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;advertising_buttons_configure
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;connection_buttons_configure
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_init
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bsp_Set
</UL>

<P><STRONG><a name="[a0]"></a>bsp_init</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, bsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = bsp_init &rArr; app_button_init &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_button_init
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_button_enable
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_event_to_button_action_assign
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buttons_leds_init
</UL>

<P><STRONG><a name="[b5]"></a>Bsp_Set</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, bsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Bsp_Set &rArr; app_button_enable &rArr; nrf_drv_gpiote_in_event_enable &rArr; nrf_gpiote_event_clear
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_button_enable
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_event_to_button_action_assign
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Key
</UL>

<P><STRONG><a name="[d6]"></a>bsp_buttons_enable</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, bsp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_button_enable
</UL>

<P><STRONG><a name="[d7]"></a>bsp_buttons_disable</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, bsp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_button_disable
</UL>

<P><STRONG><a name="[dd]"></a>bsp_wakeup_buttons_set</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, bsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bsp_wakeup_buttons_set
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_btn_ble_sleep_mode_prepare
</UL>

<P><STRONG><a name="[5a]"></a>bsp_btn_ble_sleep_mode_prepare</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, bsp_btn_ble.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bsp_btn_ble_sleep_mode_prepare &rArr; bsp_wakeup_buttons_set
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_wakeup_buttons_set
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_mode_enter
</UL>

<P><STRONG><a name="[5f]"></a>bsp_btn_ble_on_ble_evt</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, bsp_btn_ble.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = bsp_btn_ble_on_ble_evt &rArr; advertising_buttons_configure &rArr; bsp_event_to_button_action_assign
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;advertising_buttons_configure
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;connection_buttons_configure
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_dispatch
</UL>

<P><STRONG><a name="[a1]"></a>bsp_btn_ble_init</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, bsp_btn_ble.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = bsp_btn_ble_init &rArr; startup_event_extract &rArr; bsp_button_is_pressed
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startup_event_extract
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;advertising_buttons_configure
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buttons_leds_init
</UL>

<P><STRONG><a name="[1]"></a>Reset_Handler</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>CCM_AAR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>ECB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>LPCOMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>POWER_CLOCK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>QDEC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>RADIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>RTC0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>SPI0_TWI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>SPI1_TWI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>SWI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>SWI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>SWI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>SWI5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>TEMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>TIMER0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[299]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, system_nrf51.o(.text), UNUSED)

<P><STRONG><a name="[2c]"></a>SystemInit</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, system_nrf51.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemInit
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_manual_peripheral_setup_needed
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_disabled_in_debug_needed
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(.text)
</UL>
<P><STRONG><a name="[ea]"></a>adv_data_encode</STRONG> (Thumb, 444 bytes, Stack size 40 bytes, ble_advdata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = adv_data_encode &rArr; uuid_list_encode &rArr; uuid_list_sized_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;service_data_encode
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;manuf_specific_data_encode
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conn_int_encode
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uuid_list_encode
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_power_level_encode
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_mgr_oob_flags_encode
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flags_encode
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appearance_encode
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;name_encode
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_device_addr_encode
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_role_encode
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tk_value_encode
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advdata_set
</UL>

<P><STRONG><a name="[f1]"></a>ble_advdata_set</STRONG> (Thumb, 142 bytes, Stack size 104 bytes, ble_advdata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = ble_advdata_set &rArr; adv_data_encode &rArr; uuid_list_encode &rArr; uuid_list_sized_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_encode
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srdata_check
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;advdata_check
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_start
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_init
</UL>

<P><STRONG><a name="[77]"></a>ble_advertising_init</STRONG> (Thumb, 316 bytes, Stack size 24 bytes, ble_advertising.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = ble_advertising_init &rArr; ble_advdata_set &rArr; adv_data_encode &rArr; uuid_list_encode &rArr; uuid_list_sized_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_peer_address_clear
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advdata_set
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;advertising_IDLE_Init
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;advertising_init
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_advertising_init
</UL>

<P><STRONG><a name="[7c]"></a>ble_advertising_start</STRONG> (Thumb, 770 bytes, Stack size 40 bytes, ble_advertising.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = ble_advertising_start &rArr; ble_advdata_set &rArr; adv_data_encode &rArr; uuid_list_encode &rArr; uuid_list_sized_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_access_status_get
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_address_exists
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_peer_address_clear
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;whitelist_has_entries
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advdata_set
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_restart_without_whitelist
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_on_sys_evt
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_on_ble_evt
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_event_handler_O
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Key_Run
</UL>

<P><STRONG><a name="[29a]"></a>ble_advertising_stop</STRONG> (Thumb, 68 bytes, Stack size 40 bytes, ble_advertising.o(.text), UNUSED)

<P><STRONG><a name="[5e]"></a>ble_advertising_on_ble_evt</STRONG> (Thumb, 236 bytes, Stack size 16 bytes, ble_advertising.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = ble_advertising_on_ble_evt &rArr; ble_advertising_start &rArr; ble_advdata_set &rArr; adv_data_encode &rArr; uuid_list_encode &rArr; uuid_list_sized_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_start
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_dispatch
</UL>

<P><STRONG><a name="[fa]"></a>ble_advertising_on_sys_evt</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, ble_advertising.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_start
</UL>

<P><STRONG><a name="[29b]"></a>ble_advertising_peer_addr_reply</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, ble_advertising.o(.text), UNUSED)

<P><STRONG><a name="[29c]"></a>ble_advertising_whitelist_reply</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, ble_advertising.o(.text), UNUSED)

<P><STRONG><a name="[fb]"></a>ble_advertising_restart_without_whitelist</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, ble_advertising.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_start
</UL>

<P><STRONG><a name="[57]"></a>ble_conn_params_init</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, ble_conn_params.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ble_conn_params_init &rArr; app_timer_create
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conn_params_init
</UL>

<P><STRONG><a name="[fc]"></a>ble_conn_params_stop</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ble_conn_params.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
</UL>

<P><STRONG><a name="[5c]"></a>ble_conn_params_on_ble_evt</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, ble_conn_params.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = ble_conn_params_on_ble_evt &rArr; on_write &rArr; conn_params_negotiation &rArr; app_timer_start &rArr; timer_start_op_schedule &rArr; user_op_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_conn_params_update
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_write
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_disconnect
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_connect
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_dispatch
</UL>

<P><STRONG><a name="[103]"></a>ble_conn_params_change_conn_params</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, ble_conn_params.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_conn_params_ok
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[5d]"></a>ble_nus_on_ble_evt</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, ble_nus.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ble_nus_on_ble_evt &rArr; on_write
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_write
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_disconnect
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_connect
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_dispatch
</UL>

<P><STRONG><a name="[53]"></a>ble_nus_init</STRONG> (Thumb, 256 bytes, Stack size 72 bytes, ble_nus.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = ble_nus_init &rArr; tx_char_add
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_char_add
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rx_char_add
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;services_init
</UL>

<P><STRONG><a name="[4f]"></a>ble_nus_string_send</STRONG> (Thumb, 84 bytes, Stack size 40 bytes, ble_nus.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ble_nus_string_send
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_TX_Run
</UL>

<P><STRONG><a name="[50]"></a>nrf_delay_ms</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, nrf_delay.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nrf_delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___11_nrf_delay_c_532987f3__nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Start
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Wait_Busy
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_init
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_speak
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Type_A_Rrun
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Type_A_Null_Key_Rrun
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSM12_Init
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSM12_Exit_Sleep_Mode
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Per_Act_PassWord_Verify
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;More_Act_PassWord_Verify
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Manual_Add_Card_ACK
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock_Open
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMS
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Card_Run
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Controllable_Power_No
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Act_PassWord_Verify
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PS_Print_Run
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pass_Word_Run
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_a_key
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Start_TC
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_1_Handler
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_event_handler_O
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Key_Run
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_LED_Cheak_RC_Value
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKY1311_RC_VALUE
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_TX_Run
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Key
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_timer_handler
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mate_Command_Run
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Normally_Open_Door_Run
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_adc_read
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PS_LED_Run
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_abus_byte
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_Run
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_Ok
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_Error
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSM12_read_tast
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock_Close
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PS_LED_Shutdown
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_PS_Lmage_Run
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A71_RF_RX_MODE
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A71_Data_TX
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSM12_Into_Sleep_Mode
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_test
</UL>

<P><STRONG><a name="[109]"></a>nrf_drv_common_irq_enable</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, nrf_drv_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = nrf_drv_common_irq_enable &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_init
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_uart_init
</UL>

<P><STRONG><a name="[10b]"></a>nrf_drv_gpiote_init</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, nrf_drv_gpiote.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = nrf_drv_gpiote_init &rArr; nrf_drv_common_irq_enable &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pin_in_use_clear
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpiote_int_enable
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;channel_free
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_common_irq_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_button_init
</UL>

<P><STRONG><a name="[178]"></a>nrf_drv_gpiote_is_init</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, nrf_drv_gpiote.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_button_init
</UL>

<P><STRONG><a name="[10f]"></a>nrf_drv_gpiote_in_event_disable</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, nrf_drv_gpiote.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;channel_port_get
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pin_in_use_by_port
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pin_in_use_by_te
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_sense_set
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_uninit
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_button_disable
</UL>

<P><STRONG><a name="[114]"></a>nrf_drv_gpiote_in_uninit</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, nrf_drv_gpiote.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_event_disable
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;channel_port_get
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pin_in_use_clear
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_default
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpiote_te_default
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;channel_free
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pin_in_use_by_te
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_uninit
</UL>

<P><STRONG><a name="[117]"></a>nrf_drv_gpiote_out_uninit</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, nrf_drv_gpiote.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;channel_port_get
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pin_in_use_clear
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_default
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpiote_te_default
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;channel_free
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pin_in_use_by_te
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_uninit
</UL>

<P><STRONG><a name="[118]"></a>nrf_drv_gpiote_uninit</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, nrf_drv_gpiote.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_out_uninit
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_uninit
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pin_in_use_by_gpiote
</UL>

<P><STRONG><a name="[11a]"></a>nrf_drv_gpiote_out_init</STRONG> (Thumb, 230 bytes, Stack size 32 bytes, nrf_drv_gpiote.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;channel_port_alloc
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg
</UL>

<P><STRONG><a name="[11f]"></a>nrf_drv_gpiote_out_set</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, nrf_drv_gpiote.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
</UL>

<P><STRONG><a name="[120]"></a>nrf_drv_gpiote_out_clear</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, nrf_drv_gpiote.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
</UL>

<P><STRONG><a name="[29d]"></a>nrf_drv_gpiote_out_toggle</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, nrf_drv_gpiote.o(.text), UNUSED)

<P><STRONG><a name="[29e]"></a>nrf_drv_gpiote_out_task_enable</STRONG> (Thumb, 62 bytes, Stack size 12 bytes, nrf_drv_gpiote.o(.text), UNUSED)

<P><STRONG><a name="[29f]"></a>nrf_drv_gpiote_out_task_disable</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, nrf_drv_gpiote.o(.text), UNUSED)

<P><STRONG><a name="[121]"></a>nrf_drv_gpiote_out_task_addr_get</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, nrf_drv_gpiote.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;channel_port_get
</UL>

<P><STRONG><a name="[2a0]"></a>nrf_drv_gpiote_out_task_force</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, nrf_drv_gpiote.o(.text), UNUSED)

<P><STRONG><a name="[122]"></a>nrf_drv_gpiote_out_task_trigger</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, nrf_drv_gpiote.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;channel_port_get
</UL>

<P><STRONG><a name="[123]"></a>nrf_drv_gpiote_in_init</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, nrf_drv_gpiote.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pin_in_use_by_gpiote
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;channel_port_alloc
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_button_init
</UL>

<P><STRONG><a name="[124]"></a>nrf_drv_gpiote_in_event_enable</STRONG> (Thumb, 186 bytes, Stack size 32 bytes, nrf_drv_gpiote.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = nrf_drv_gpiote_in_event_enable &rArr; nrf_gpiote_event_clear
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;channel_handler_get
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;channel_port_get
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pin_in_use_by_port
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpiote_int_enable
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpiote_event_clear
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pin_in_use_by_te
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_sense_set
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_button_enable
</UL>

<P><STRONG><a name="[177]"></a>nrf_drv_gpiote_in_is_set</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, nrf_drv_gpiote.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_button_is_pushed
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpiote_event_handler
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;detection_delay_timeout_handler
</UL>

<P><STRONG><a name="[127]"></a>nrf_drv_gpiote_in_event_addr_get</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, nrf_drv_gpiote.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;channel_port_get
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpiote_event_addr_get
</UL>

<P><STRONG><a name="[c]"></a>GPIOTE_IRQHandler</STRONG> (Thumb, 378 bytes, Stack size 48 bytes, nrf_drv_gpiote.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GPIOTE_IRQHandler &rArr; nrf_gpiote_event_clear
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;channel_handler_get
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;channel_port_get
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpiote_event_clear
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpiote_event_is_set
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_sense_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[12a]"></a>nrf_drv_uart_init</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, nrf_drv_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apply_config
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_int_enable
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_common_irq_enable
</UL>

<P><STRONG><a name="[12d]"></a>nrf_drv_uart_uninit</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, nrf_drv_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pins_to_default
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_int_disable
</UL>

<P><STRONG><a name="[132]"></a>nrf_drv_uart_tx</STRONG> (Thumb, 170 bytes, Stack size 16 bytes, nrf_drv_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_task_trigger
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_event_check
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_event_clear
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_byte
</UL>

<P><STRONG><a name="[136]"></a>nrf_drv_uart_rx</STRONG> (Thumb, 216 bytes, Stack size 32 bytes, nrf_drv_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rx_enable
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_task_trigger
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_int_enable
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_event_check
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_event_clear
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rx_byte
</UL>

<P><STRONG><a name="[138]"></a>nrf_drv_uart_rx_enable</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, nrf_drv_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rx_enable
</UL>

<P><STRONG><a name="[139]"></a>nrf_drv_uart_rx_disable</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, nrf_drv_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_task_trigger
</UL>

<P><STRONG><a name="[13a]"></a>nrf_drv_uart_errorsrc_get</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, nrf_drv_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_errorsrc_get_and_clear
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_event_clear
</UL>

<P><STRONG><a name="[13c]"></a>nrf_drv_uart_tx_abort</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, nrf_drv_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_task_trigger
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_done_event
</UL>

<P><STRONG><a name="[13e]"></a>nrf_drv_uart_rx_abort</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, nrf_drv_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_task_trigger
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_int_disable
</UL>

<P><STRONG><a name="[9]"></a>UART0_IRQHandler</STRONG> (Thumb, 330 bytes, Stack size 24 bytes, nrf_drv_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = UART0_IRQHandler &rArr; tx_done_event
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_task_trigger
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_errorsrc_get_and_clear
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_int_disable
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_int_enable_check
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_event_check
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_event_clear
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_done_event
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rx_done_event
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rx_byte
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_byte
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[16f]"></a>pstorage_sys_event_handler</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, pstorage.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_operation_failure_run
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_operation_success_run
</UL>

<P><STRONG><a name="[170]"></a>pstorage_init</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, pstorage.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_flash_page_size
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_queue_init
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_flash_page_end
</UL>

<P><STRONG><a name="[171]"></a>pstorage_register</STRONG> (Thumb, 270 bytes, Stack size 24 bytes, pstorage.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_flash_page_size
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_flash_page_end
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[2a1]"></a>pstorage_block_identifier_get</STRONG> (Thumb, 154 bytes, Stack size 20 bytes, pstorage.o(.text), UNUSED)

<P><STRONG><a name="[172]"></a>pstorage_store</STRONG> (Thumb, 262 bytes, Stack size 24 bytes, pstorage.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_word_aligned
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_queue_enqueue
</UL>

<P><STRONG><a name="[174]"></a>pstorage_update</STRONG> (Thumb, 216 bytes, Stack size 24 bytes, pstorage.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_word_aligned
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_queue_enqueue
</UL>

<P><STRONG><a name="[175]"></a>pstorage_load</STRONG> (Thumb, 242 bytes, Stack size 40 bytes, pstorage.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_word_aligned
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[176]"></a>pstorage_clear</STRONG> (Thumb, 270 bytes, Stack size 32 bytes, pstorage.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_word_aligned
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_queue_enqueue
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[f7]"></a>pstorage_access_status_get</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, pstorage.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_start
</UL>

<P><STRONG><a name="[d4]"></a>app_button_init</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, app_button.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = app_button_init &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_init
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_is_init
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_init
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_init
</UL>

<P><STRONG><a name="[d5]"></a>app_button_enable</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, app_button.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_button_enable &rArr; nrf_drv_gpiote_in_event_enable &rArr; nrf_gpiote_event_clear
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_event_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_buttons_enable
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_init
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bsp_Set
</UL>

<P><STRONG><a name="[d8]"></a>app_button_disable</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, app_button.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_event_disable
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_buttons_disable
</UL>

<P><STRONG><a name="[179]"></a>app_button_is_pushed</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, app_button.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_is_set
</UL>

<P><STRONG><a name="[4b]"></a>app_error_handler</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, app_error.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2_IRQHandler
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intern_softdevice_events_execute
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timeout_handler_exec
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mac_set
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;advertising_IDLE_Init
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Start_TC
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_event_handler_O
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Key_Run
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_Conner
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_TX_Run
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_nrf_callback
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_manage
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buttons_leds_init
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;advertising_init
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_advertising_init
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_ble_evt
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_adv_evt
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_mode_enter
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conn_params_init
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conn_params_error_handler
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_conn_params_evt
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;services_init
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_params_init
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDR_Close_Init
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Moto_Timer_Init
</UL>

<P><STRONG><a name="[17]"></a>RTC1_IRQHandler</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = RTC1_IRQHandler &rArr; timer_timeouts_check &rArr; timeout_handler_exec
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_timeouts_check
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>SWI0_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = SWI0_IRQHandler &rArr; timer_list_handler &rArr; compare_reg_update &rArr; timer_timeouts_check_sched
</UL>
<BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_list_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[c5]"></a>app_timer_init</STRONG> (Thumb, 156 bytes, Stack size 40 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = app_timer_init &rArr; rtc1_init &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc1_counter_get
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_ClearPendingIRQ
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc1_stop
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc1_init
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c6]"></a>app_timer_create</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_timer_create
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_button_init
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_init
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_init
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDR_Close_Init
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Moto_Timer_Init
</UL>

<P><STRONG><a name="[79]"></a>app_timer_start</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = app_timer_start &rArr; timer_start_op_schedule &rArr; user_op_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_id_get
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_start_op_schedule
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpiote_event_handler
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conn_params_negotiation
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;F_Print_Input_Ps_Run
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Start_TC
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKY1311_State
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_event_handler_O
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Key_Run
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Key
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDR_Close_Init
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Moto_Timer_Init
</UL>

<P><STRONG><a name="[8e]"></a>app_timer_stop</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = app_timer_stop &rArr; timer_stop_op_schedule &rArr; user_op_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_id_get
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_stop_op_schedule
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpiote_event_handler
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_stop
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_write
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_disconnect
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_button_disable
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;F_Print_Input_Ps_Run
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Close_Hander
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_1_Handler
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKY1311_State
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Key
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Moto_Timer_Hander
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDR_Close_Timer_Hander
</UL>

<P><STRONG><a name="[197]"></a>app_timer_stop_all</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, app_timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_id_get
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_stop_all_op_schedule
</UL>

<P><STRONG><a name="[198]"></a>app_timer_cnt_get</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, app_timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc1_counter_get
</UL>

<P><STRONG><a name="[199]"></a>app_timer_cnt_diff_compute</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, app_timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ticks_diff_get
</UL>

<P><STRONG><a name="[31]"></a>softdevice_assertion_handler</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, softdevice_handler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = softdevice_assertion_handler &rArr; assert_nrf_callback
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_nrf_callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> softdevice_handler.o(.text)
</UL>
<P><STRONG><a name="[19a]"></a>intern_softdevice_events_execute</STRONG> (Thumb, 168 bytes, Stack size 24 bytes, softdevice_handler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = intern_softdevice_events_execute
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2_IRQHandler
</UL>

<P><STRONG><a name="[2a2]"></a>softdevice_handler_isEnabled</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, softdevice_handler.o(.text), UNUSED)

<P><STRONG><a name="[61]"></a>softdevice_handler_init</STRONG> (Thumb, 84 bytes, Stack size 40 bytes, softdevice_handler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = softdevice_handler_init
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
</UL>

<P><STRONG><a name="[2a3]"></a>softdevice_handler_sd_disable</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, softdevice_handler.o(.text), UNUSED)

<P><STRONG><a name="[62]"></a>softdevice_ble_evt_handler_set</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, softdevice_handler.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
</UL>

<P><STRONG><a name="[2a4]"></a>softdevice_sys_evt_handler_set</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, softdevice_handler.o(.text), UNUSED)

<P><STRONG><a name="[1c]"></a>SWI2_IRQHandler</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, softdevice_handler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SWI2_IRQHandler &rArr; intern_softdevice_events_execute
</UL>
<BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intern_softdevice_events_execute
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[19f]"></a>SPI_Tranfer</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, w25q32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_Tranfer
</UL>
<BR>[Called By]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_WriteOneByte
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_ReadOneByte
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIByteCom
</UL>

<P><STRONG><a name="[19e]"></a>SpiFlash_ReadOneByte</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, w25q32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SpiFlash_ReadOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Tranfer
</UL>
<BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read_Data
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read_Sector_Data
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_ReadSR
</UL>

<P><STRONG><a name="[1a0]"></a>SpiFlash_WriteOneByte</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, w25q32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Tranfer
</UL>
<BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read_Data
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read_Sector_Data
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write_Data
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Erase_Block
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write_Page
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Reset
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_EnableReset
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_PowerUp
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_ReadSR
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write_Enable
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write_CMD
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Flash_Sleep
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Erase_Sector
</UL>

<P><STRONG><a name="[1a2]"></a>SpiFlash_ReadSR</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, w25q32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SpiFlash_ReadSR &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_WriteOneByte
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_ReadOneByte
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Busy
</UL>

<P><STRONG><a name="[1a6]"></a>SpiFlash_Read</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, w25q32.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_WriteOneByte
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_ReadOneByte
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write_CMD
</UL>

<P><STRONG><a name="[70]"></a>SpiFlash_PowerDown</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, w25q32.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_init
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Opinion_PS_Print_Valid
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PS_Print_Run
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pass_Word_Run
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_1_Handler
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Marnual_Add_Run
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_timer_handler
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mate_Command_Run
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_OpenLock_Run
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Information_Run
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Information_Run
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_A_PassWord_Run
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Mate_Run
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_OP_Door_note
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_Door_note
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;More_Act_PassWord_Mode_Run
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_A_More_Act_PassWord_Run
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Need_Of_Ps_Print_Data_IDLE_ID
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Flash_PS_Print
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Op_Note
</UL>

<P><STRONG><a name="[1a8]"></a>SpiFlash_PowerUp</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, w25q32.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_WriteOneByte
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
</UL>

<P><STRONG><a name="[1a9]"></a>SPIFlash_EnableReset</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, w25q32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SPIFlash_EnableReset &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_WriteOneByte
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_CMD_init
</UL>

<P><STRONG><a name="[1aa]"></a>SPIFlash_Reset</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, w25q32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SPIFlash_Reset &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_WriteOneByte
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_CMD_init
</UL>

<P><STRONG><a name="[1ab]"></a>SPIFlash_CMD_init</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, w25q32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SPIFlash_CMD_init &rArr; SPIFlash_Reset &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Reset
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_EnableReset
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___8_W25Q32_C_40528c18__nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Start
</UL>

<P><STRONG><a name="[92]"></a>SPIFlash_Erase_Sector</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, w25q32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = SPIFlash_Erase_Sector &rArr; SpiFlash_Write_CMD &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_WriteOneByte
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write_Enable
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Wait_Busy
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write_CMD
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_init
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Per_Act_PassWord_Save
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ev_Cat_Dat
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erase_US_TypeB_Sector
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erase_US_TypeA_Sector
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erase_AD_TypeB_Sector
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erase_AD_TypeA_Sector
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_FlashWord_Num
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Flash_US_TypeB_Data
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Flash_US_TypeA_Data
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Flash_AD_TypeB_Data
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Flash_AD_TypeA_Data
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Act_PassWord_Save
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADD_Op_Door_Note
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_1_Handler
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updata_Devic_Num
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Mate_Run
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSM12MC_Sen_Code_update
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Flash_PS_Print
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;History_Time_Act_PassWord
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dle_A_More_Act_PassWord_Verify
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;More_Act_PassWord_Save
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_SN_PassWord
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_User_PassWord
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Admin_PassWord
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Flash_PassWord
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Flash_PassWord
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erase_PS_Print_Sector
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_Devic_Num
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Devic_Num
</UL>

<P><STRONG><a name="[1ac]"></a>SpiFlash_Write_Page</STRONG> (Thumb, 122 bytes, Stack size 40 bytes, w25q32.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_WriteOneByte
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write_Enable
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Wait_Busy
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write_CMD
</UL>
<BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write_MorePage
</UL>

<P><STRONG><a name="[1ad]"></a>SpiFlash_Write_MorePage</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, w25q32.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write_Page
</UL>

<P><STRONG><a name="[2a5]"></a>SPIFlash_GPIO_GetBit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, w25q32.o(.text), UNUSED)

<P><STRONG><a name="[1ae]"></a>SPIFlash_Erase_Block</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, w25q32.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_WriteOneByte
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write_Enable
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Wait_Busy
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write_CMD
</UL>

<P><STRONG><a name="[1af]"></a>SpiFlash_Write_Data</STRONG> (Thumb, 80 bytes, Stack size 40 bytes, w25q32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = SpiFlash_Write_Data &rArr; SpiFlash_Write_CMD &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_WriteOneByte
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write_Enable
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Wait_Busy
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write_CMD
</UL>
<BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write_Sector_Data
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_init
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ev_Cat_Dat
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_FlashWord_Num
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updata_Devic_Num
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Write_Tab
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Devic_Num
</UL>

<P><STRONG><a name="[1b0]"></a>SpiFlash_Write_Sector_Data</STRONG> (Thumb, 64 bytes, Stack size 40 bytes, w25q32.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write_Data
</UL>

<P><STRONG><a name="[1b1]"></a>SpiFlash_Read_Sector_Data</STRONG> (Thumb, 116 bytes, Stack size 40 bytes, w25q32.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_WriteOneByte
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_ReadOneByte
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write_CMD
</UL>

<P><STRONG><a name="[1b2]"></a>SpiFlash_Read_Data</STRONG> (Thumb, 72 bytes, Stack size 40 bytes, w25q32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = SpiFlash_Read_Data &rArr; SpiFlash_Write_CMD &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_WriteOneByte
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_ReadOneByte
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write_CMD
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_init
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Read_Tab
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Cat_Dat
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ev_Cat_Dat
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Devic_static_read
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updata_Devic_Num
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Devic_Num
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Devic_Num
</UL>

<P><STRONG><a name="[1b3]"></a>SPI_Flash_Start</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, w25q32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = SPI_Flash_Start &rArr; spi_master_init &rArr; nrf_gpio_cfg_input &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_CMD_init
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_input
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_output
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_init
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Flash_Init
</UL>

<P><STRONG><a name="[64]"></a>Spi_Flash_Init</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, w25q32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = Spi_Flash_Init &rArr; SPI_Flash_Start &rArr; spi_master_init &rArr; nrf_gpio_cfg_input &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_init
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Opinion_PS_Print_Valid
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PS_Print_Run
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311_run
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311_Init
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pass_Word_Run
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_1_Handler
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKY1311_State
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_event_handler_O
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Key_Run
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Marnual_Add_Run
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_LED_Cheak_RC_Value
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKY1311_RC_VALUE
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Key
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_timer_handler
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mate_Command_Run
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_OpenLock_Run
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Information_Run
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Information_Run
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_A_PassWord_Run
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Mate_Run
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_OP_Door_note
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_Door_note
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;More_Act_PassWord_Mode_Run
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_A_More_Act_PassWord_Run
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Need_Of_Ps_Print_Data_IDLE_ID
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Flash_PS_Print
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Op_Note
</UL>

<P><STRONG><a name="[6c]"></a>Spi_Flash_Sleep</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, w25q32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Spi_Flash_Sleep &rArr; CL_SKY1311_IRQ &rArr; irqClearAll &rArr; sky1311WriteReg &rArr; SPIByteCom &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_WriteOneByte
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_input
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_SKY1311_IRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_init
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Opinion_PS_Print_Valid
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PS_Print_Run
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311_Init
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pass_Word_Run
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_1_Handler
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKY1311_State
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_event_handler_O
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Key_Run
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Marnual_Add_Run
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_LED_Cheak_RC_Value
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKY1311_RC_VALUE
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Key
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_timer_handler
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mate_Command_Run
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_OpenLock_Run
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Information_Run
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Information_Run
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_A_PassWord_Run
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Mate_Run
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_OP_Door_note
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_Door_note
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;More_Act_PassWord_Mode_Run
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_A_More_Act_PassWord_Run
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Need_Of_Ps_Print_Data_IDLE_ID
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Flash_PS_Print
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Op_Note
</UL>

<P><STRONG><a name="[1b5]"></a>BL_I2C_GPIO_init</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, bl5372.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = BL_I2C_GPIO_init &rArr; nrf_gpio_cfg_output &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_output
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bl_value_write
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bl_value_read
</UL>

<P><STRONG><a name="[1b8]"></a>BL_I2C_GPIO_SLEEP</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, bl5372.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = BL_I2C_GPIO_SLEEP &rArr; nrf_gpio_cfg_default &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_default
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bl_value_write
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bl_value_read
</UL>

<P><STRONG><a name="[1ba]"></a>BLI2C_delay</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, bl5372.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BLI2C_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___8_BL5372_C_e370d2a4__nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLI2C_READ_BYTE
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_I2C_WRITE_BYTE
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_I2C_SEND_ACK
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_I2C_WAIT_ACK
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLI2C_STOP
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLI2C_START
</UL>

<P><STRONG><a name="[1bb]"></a>BLI2C_START</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, bl5372.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BLI2C_START &rArr; BLI2C_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLI2C_delay
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_read_i2c
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_write_i2c
</UL>

<P><STRONG><a name="[1bd]"></a>BLI2C_STOP</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, bl5372.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BLI2C_STOP &rArr; BLI2C_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLI2C_delay
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_read_i2c
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_write_i2c
</UL>

<P><STRONG><a name="[1be]"></a>BL_I2C_WAIT_ACK</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, bl5372.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BL_I2C_WAIT_ACK &rArr; BLI2C_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLI2C_delay
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_read
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_read_i2c
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_write_i2c
</UL>

<P><STRONG><a name="[1c0]"></a>BL_I2C_SEND_ACK</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, bl5372.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BL_I2C_SEND_ACK &rArr; BLI2C_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLI2C_delay
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_read_i2c
</UL>

<P><STRONG><a name="[1c1]"></a>BL_I2C_WRITE_BYTE</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, bl5372.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = BL_I2C_WRITE_BYTE &rArr; BLI2C_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLI2C_delay
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_read_i2c
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_write_i2c
</UL>

<P><STRONG><a name="[1c2]"></a>BLI2C_READ_BYTE</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, bl5372.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = BLI2C_READ_BYTE &rArr; BLI2C_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLI2C_delay
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_read
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_read_i2c
</UL>

<P><STRONG><a name="[1c3]"></a>BL_write_i2c</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, bl5372.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = BL_write_i2c &rArr; BL_I2C_WRITE_BYTE &rArr; BLI2C_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_I2C_WRITE_BYTE
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_I2C_WAIT_ACK
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLI2C_STOP
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLI2C_START
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bl_value_write
</UL>

<P><STRONG><a name="[1c4]"></a>BL_read_i2c</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, bl5372.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = BL_read_i2c &rArr; BLI2C_READ_BYTE &rArr; BLI2C_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLI2C_READ_BYTE
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_I2C_WRITE_BYTE
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_I2C_SEND_ACK
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_I2C_WAIT_ACK
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLI2C_STOP
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLI2C_START
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bl_value_read
</UL>

<P><STRONG><a name="[1c5]"></a>CaculateWeekDay</STRONG> (Thumb, 100 bytes, Stack size 40 bytes, bl5372.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = CaculateWeekDay &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update_Time
</UL>

<P><STRONG><a name="[1c6]"></a>bl_value_read</STRONG> (Thumb, 204 bytes, Stack size 8 bytes, bl5372.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = bl_value_read &rArr; BL_I2C_GPIO_SLEEP &rArr; nrf_gpio_cfg_default &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_read_i2c
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_I2C_GPIO_SLEEP
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_I2C_GPIO_init
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Time
</UL>

<P><STRONG><a name="[1c7]"></a>bl_value_write</STRONG> (Thumb, 204 bytes, Stack size 8 bytes, bl5372.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = bl_value_write &rArr; BL_I2C_GPIO_SLEEP &rArr; nrf_gpio_cfg_default &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_write_i2c
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_I2C_GPIO_SLEEP
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_I2C_GPIO_init
</UL>
<BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update_Time
</UL>

<P><STRONG><a name="[89]"></a>Get_Time</STRONG> (Thumb, 304 bytes, Stack size 8 bytes, devic_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = Get_Time &rArr; bl_value_read &rArr; BL_I2C_GPIO_SLEEP &rArr; nrf_gpio_cfg_default &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bl_value_read
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_init
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Opinion_PS_Print_Valid
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Card_Run
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADD_Op_Door_Note
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pass_Word_Run
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_event_handler_O
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time_Ref_Run
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Time_Run
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_OpenLock_Run
</UL>

<P><STRONG><a name="[1c9]"></a>Update_Time</STRONG> (Thumb, 312 bytes, Stack size 24 bytes, devic_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = Update_Time &rArr; CaculateWeekDay &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bl_value_write
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CaculateWeekDay
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time_Ref_Run
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_OpenLock_Run
</UL>

<P><STRONG><a name="[84]"></a>Devic_static_read</STRONG> (Thumb, 90 bytes, Stack size 48 bytes, devic_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = Devic_static_read &rArr; SpiFlash_Read_Data &rArr; SpiFlash_Write_CMD &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_init
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pass_Word_Run
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_1_Handler
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_event_handler_O
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mate_Command_Run
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_OpenLock_Run
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Information_Run
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Mate_Run
</UL>

<P><STRONG><a name="[c3]"></a>start_init</STRONG> (Thumb, 402 bytes, Stack size 24 bytes, devic_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 372<LI>Call Chain = start_init &rArr; CL_FlashWord_Num &rArr; SpiFlash_Write_Data &rArr; SpiFlash_Write_CMD &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read_Data
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write_Data
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_speak
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auart_init
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time_to_Unix
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSM12_Init
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Flash_Sleep
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Flash_Init
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_PowerDown
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Busy
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Erase_Sector
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Time
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Devic_static_read
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_FlashWord_Num
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSM12_read_tast
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSM12MC_Sen_Read
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Lock_Bon
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock_Close
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_BR_Init
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GPIO_init
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_Value
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9a]"></a>SPI_Flash_Busy</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, flash_rw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SPI_Flash_Busy &rArr; SpiFlash_ReadSR &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_ReadSR
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___10_Flash_RW_c_445f4bf8__nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_init
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Per_Act_PassWord_Save
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ev_Cat_Dat
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erase_US_TypeB_Sector
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erase_US_TypeA_Sector
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erase_AD_TypeB_Sector
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erase_AD_TypeA_Sector
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_FlashWord_Num
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Flash_US_TypeB_Data
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Flash_US_TypeA_Data
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Flash_AD_TypeB_Data
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Flash_AD_TypeA_Data
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Act_PassWord_Verify
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Act_PassWord_Save
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADD_Op_Door_Note
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_1_Handler
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mate_Command_Run
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Information_Run
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updata_Devic_Num
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Mate_Run
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSM12MC_Sen_Code_update
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_A_ID_PS_Print
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Flash_PS_Print
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_US_Type_B
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_AD_Type_B
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_US_Type_A
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_AD_Type_A
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;History_Time_Act_PassWord
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dle_A_More_Act_PassWord_Verify
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;More_Act_PassWord_Save
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_SN_PassWord
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_User_PassWord
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Admin_PassWord
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_A_Type_PS_Print
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Flash_PassWord
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Flash_PassWord
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Write_Tab
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erase_PS_Print_Sector
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Devic_Num
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSM12MC_Sen_Read
</UL>

<P><STRONG><a name="[1d3]"></a>Read_Devic_Num</STRONG> (Thumb, 68 bytes, Stack size 48 bytes, flash_rw.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read_Data
</UL>

<P><STRONG><a name="[1d4]"></a>Write_Devic_Num</STRONG> (Thumb, 108 bytes, Stack size 88 bytes, flash_rw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = Write_Devic_Num &rArr; SpiFlash_Read_Data &rArr; SpiFlash_Write_CMD &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read_Data
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write_Data
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Busy
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Erase_Sector
</UL>
<BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mate_Command_Run
</UL>

<P><STRONG><a name="[1d5]"></a>CL_Devic_Num</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, flash_rw.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Erase_Sector
</UL>

<P><STRONG><a name="[2a6]"></a>PAGE_to_BLOCK_PAGE</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, flash_rw.o(.text), UNUSED)

<P><STRONG><a name="[2a7]"></a>PAGE_to_Block_Sector</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, flash_rw.o(.text), UNUSED)

<P><STRONG><a name="[a8]"></a>Sector_to_Block_Page</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, flash_rw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Per_Act_PassWord_Verify
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Per_Act_PassWord_Save
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Opinion_PS_Print_Valid
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Once_Act_PassWord_Verify
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Need_TypeB_Data_SN
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Need_TypeA_Data_SN
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;More_Act_PassWord_Verify
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Cat_Dat
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ev_Cat_Dat
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_FlashWord_Num
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Flash_US_TypeB_Data
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Flash_US_TypeA_Data
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Flash_AD_TypeB_Data
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Flash_AD_TypeA_Data
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Act_PassWord_Verify
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Act_PassWord_Save
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADD_Op_Door_Note
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PassWord_Con
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Information_Run
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSM12MC_Sen_Code_update
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_A_ID_PS_Print
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Need_Of_Ps_Print_Data_IDLE_ID
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Flash_PS_Print
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_US_Type_B
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_AD_Type_B
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_US_Type_A
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_AD_Type_A
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;History_Time_Act_PassWord
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dle_A_More_Act_PassWord_Verify
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;More_Act_PassWord_Save
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Op_Note
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_SN_PassWord
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_User_PassWord
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Admin_PassWord
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_A_Type_PS_Print
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Flash_PassWord
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Flash_PassWord
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSM12MC_Sen_Read
</UL>

<P><STRONG><a name="[1d7]"></a>Sector_to_Block_Sector</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, flash_rw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Per_Act_PassWord_Save
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ev_Cat_Dat
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erase_US_TypeB_Sector
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erase_US_TypeA_Sector
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erase_AD_TypeB_Sector
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erase_AD_TypeA_Sector
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_FlashWord_Num
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Flash_US_TypeB_Data
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Flash_US_TypeA_Data
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Flash_AD_TypeB_Data
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Flash_AD_TypeA_Data
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Act_PassWord_Save
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADD_Op_Door_Note
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSM12MC_Sen_Code_update
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Flash_PS_Print
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;History_Time_Act_PassWord
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dle_A_More_Act_PassWord_Verify
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;More_Act_PassWord_Save
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_SN_PassWord
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_User_PassWord
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Admin_PassWord
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Flash_PassWord
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Flash_PassWord
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erase_PS_Print_Sector
</UL>

<P><STRONG><a name="[1d6]"></a>Erase_PS_Print_Sector</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, flash_rw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = Erase_PS_Print_Sector &rArr; SPIFlash_Erase_Sector &rArr; SpiFlash_Write_CMD &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Busy
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Erase_Sector
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_to_Block_Sector
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_FlashWord_Num
</UL>

<P><STRONG><a name="[93]"></a>CL_FlashWord_Num</STRONG> (Thumb, 400 bytes, Stack size 280 bytes, flash_rw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 348<LI>Call Chain = CL_FlashWord_Num &rArr; SpiFlash_Write_Data &rArr; SpiFlash_Write_CMD &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write_Data
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_to_Block_Page
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Busy
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Erase_Sector
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erase_PS_Print_Sector
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_to_Block_Sector
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_init
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_1_Handler
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Mate_Run
</UL>

<P><STRONG><a name="[a9]"></a>SPIFlash_Read_Tab</STRONG> (Thumb, 94 bytes, Stack size 48 bytes, flash_rw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = SPIFlash_Read_Tab &rArr; SpiFlash_Read_Data &rArr; SpiFlash_Write_CMD &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Per_Act_PassWord_Verify
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Per_Act_PassWord_Save
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Opinion_PS_Print_Valid
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Once_Act_PassWord_Verify
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Need_TypeB_Data_SN
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Need_TypeA_Data_SN
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;More_Act_PassWord_Verify
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Flash_US_TypeB_Data
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Flash_US_TypeA_Data
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Flash_AD_TypeB_Data
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Flash_AD_TypeA_Data
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Act_PassWord_Verify
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Act_PassWord_Save
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADD_Op_Door_Note
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PassWord_Con
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_A_ID_PS_Print
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Need_Of_Ps_Print_Data_IDLE_ID
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Flash_PS_Print
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_US_Type_B
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_AD_Type_B
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_US_Type_A
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_AD_Type_A
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;History_Time_Act_PassWord
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dle_A_More_Act_PassWord_Verify
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;More_Act_PassWord_Save
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Op_Note
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_SN_PassWord
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_User_PassWord
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Admin_PassWord
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_A_Type_PS_Print
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Flash_PassWord
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Flash_PassWord
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSM12MC_Sen_Read
</UL>

<P><STRONG><a name="[1d8]"></a>SPIFlash_Write_Tab</STRONG> (Thumb, 106 bytes, Stack size 48 bytes, flash_rw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = SPIFlash_Write_Tab &rArr; SpiFlash_Write_Data &rArr; SpiFlash_Write_CMD &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write_Data
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Busy
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Per_Act_PassWord_Save
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Flash_US_TypeB_Data
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Flash_US_TypeA_Data
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Flash_AD_TypeB_Data
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Flash_AD_TypeA_Data
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Act_PassWord_Verify
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Act_PassWord_Save
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADD_Op_Door_Note
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Information_Run
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSM12MC_Sen_Code_update
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_A_ID_PS_Print
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Flash_PS_Print
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_US_Type_B
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_AD_Type_B
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_US_Type_A
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_AD_Type_A
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;History_Time_Act_PassWord
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dle_A_More_Act_PassWord_Verify
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;More_Act_PassWord_Save
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_SN_PassWord
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_User_PassWord
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Admin_PassWord
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_A_Type_PS_Print
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Flash_PassWord
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Flash_PassWord
</UL>

<P><STRONG><a name="[a4]"></a>Ev_Cat_Dat</STRONG> (Thumb, 368 bytes, Stack size 296 bytes, flash_rw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = Ev_Cat_Dat &rArr; SpiFlash_Read_Data &rArr; SpiFlash_Write_CMD &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read_Data
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write_Data
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_to_Block_Page
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Busy
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Erase_Sector
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_to_Block_Sector
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Per_Act_PassWord_Save
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Card_Run
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_Flash_PassWord
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_Flash_OPEN_DOOR_NOTE
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Flash_US_TypeB_Data
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Flash_US_TypeA_Data
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Flash_AD_TypeB_Data
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Flash_AD_TypeA_Data
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Act_PassWord_Save
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADD_Op_Door_Note
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_timer_handler
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_User_Key
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mate_Command_Run
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Information_Run
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_A_PassWord_Run
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_Door_note
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;More_Act_PassWord_Mode_Run
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_A_ID_PS_Print
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Flash_PS_Print
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_US_Type_B
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_AD_Type_B
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_US_Type_A
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_AD_Type_A
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;History_Time_Act_PassWord
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dle_A_More_Act_PassWord_Verify
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;More_Act_PassWord_Save
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_SN_PassWord
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_User_PassWord
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Admin_PassWord
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_A_Type_PS_Print
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Flash_PassWord
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Flash_PassWord
</UL>

<P><STRONG><a name="[94]"></a>CL_Flash_PassWord</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, flash_rw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 372<LI>Call Chain = CL_Flash_PassWord &rArr; Ev_Cat_Dat &rArr; SpiFlash_Read_Data &rArr; SpiFlash_Write_CMD &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ev_Cat_Dat
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_1_Handler
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Mate_Run
</UL>

<P><STRONG><a name="[95]"></a>CL_Flash_OPEN_DOOR_NOTE</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, flash_rw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 372<LI>Call Chain = CL_Flash_OPEN_DOOR_NOTE &rArr; Ev_Cat_Dat &rArr; SpiFlash_Read_Data &rArr; SpiFlash_Write_CMD &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ev_Cat_Dat
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_1_Handler
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Mate_Run
</UL>

<P><STRONG><a name="[ab]"></a>Get_Cat_Dat</STRONG> (Thumb, 182 bytes, Stack size 280 bytes, flash_rw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 348<LI>Call Chain = Get_Cat_Dat &rArr; SpiFlash_Read_Data &rArr; SpiFlash_Write_CMD &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read_Data
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_to_Block_Page
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Per_Act_PassWord_Verify
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Per_Act_PassWord_Save
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Opinion_PS_Print_Valid
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Once_Act_PassWord_Verify
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Need_TypeB_Data_SN
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Need_TypeA_Data_SN
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;More_Act_PassWord_Verify
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Card_Run
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Flash_US_TypeB_Data
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Flash_US_TypeA_Data
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Flash_AD_TypeB_Data
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Flash_AD_TypeA_Data
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Act_PassWord_Save
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADD_Op_Door_Note
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pass_Word_Run
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_User_Key
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Information_Run
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_A_PassWord_Run
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_OP_Door_note
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_A_ID_PS_Print
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Need_Of_Ps_Print_Data_IDLE_ID
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Flash_PS_Print
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_US_Type_B
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_AD_Type_B
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_US_Type_A
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_AD_Type_A
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;History_Time_Act_PassWord
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dle_A_More_Act_PassWord_Verify
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;More_Act_PassWord_Save
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Op_Note
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_SN_PassWord
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_User_PassWord
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Admin_PassWord
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_A_Type_PS_Print
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Flash_PassWord
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Flash_PassWord
</UL>

<P><STRONG><a name="[1da]"></a>PassWord_Same</STRONG> (Thumb, 162 bytes, Stack size 56 bytes, flash_rw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = PassWord_Same
</UL>
<BR>[Called By]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Flash_PassWord
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Flash_PassWord
</UL>

<P><STRONG><a name="[1d9]"></a>Add_Flash_PassWord</STRONG> (Thumb, 1478 bytes, Stack size 264 bytes, flash_rw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 628<LI>Call Chain = Add_Flash_PassWord &rArr; Ev_Cat_Dat &rArr; SpiFlash_Read_Data &rArr; SpiFlash_Write_CMD &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_to_Block_Page
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Busy
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Read_Tab
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Erase_Sector
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Cat_Dat
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ev_Cat_Dat
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PassWord_Same
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Write_Tab
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_to_Block_Sector
</UL>
<BR>[Called By]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Information_Run
</UL>

<P><STRONG><a name="[1db]"></a>Del_Flash_PassWord</STRONG> (Thumb, 476 bytes, Stack size 64 bytes, flash_rw.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_to_Block_Page
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Busy
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Read_Tab
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Erase_Sector
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Cat_Dat
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ev_Cat_Dat
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PassWord_Same
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Write_Tab
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_to_Block_Sector
</UL>

<P><STRONG><a name="[1e2]"></a>read_Soctor</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, flash_rw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dle_A_More_Act_PassWord_Verify
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;More_Act_PassWord_Save
</UL>

<P><STRONG><a name="[1dc]"></a>Del_A_Type_PS_Print</STRONG> (Thumb, 252 bytes, Stack size 40 bytes, flash_rw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 404<LI>Call Chain = Del_A_Type_PS_Print &rArr; Ev_Cat_Dat &rArr; SpiFlash_Read_Data &rArr; SpiFlash_Write_CMD &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_to_Block_Page
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Busy
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Read_Tab
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Cat_Dat
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ev_Cat_Dat
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Write_Tab
</UL>
<BR>[Called By]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_User_PassWord
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Admin_PassWord
</UL>

<P><STRONG><a name="[1dd]"></a>Del_Admin_PassWord</STRONG> (Thumb, 962 bytes, Stack size 256 bytes, flash_rw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 660<LI>Call Chain = Del_Admin_PassWord &rArr; Del_A_Type_PS_Print &rArr; Ev_Cat_Dat &rArr; SpiFlash_Read_Data &rArr; SpiFlash_Write_CMD &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_to_Block_Page
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Busy
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Read_Tab
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Erase_Sector
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Cat_Dat
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ev_Cat_Dat
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_A_Type_PS_Print
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Write_Tab
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_to_Block_Sector
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Information_Run
</UL>

<P><STRONG><a name="[1de]"></a>Del_User_PassWord</STRONG> (Thumb, 938 bytes, Stack size 256 bytes, flash_rw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 660<LI>Call Chain = Del_User_PassWord &rArr; Del_A_Type_PS_Print &rArr; Ev_Cat_Dat &rArr; SpiFlash_Read_Data &rArr; SpiFlash_Write_CMD &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_to_Block_Page
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Busy
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Read_Tab
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Erase_Sector
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Cat_Dat
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ev_Cat_Dat
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_A_Type_PS_Print
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Write_Tab
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_to_Block_Sector
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_User_Key
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Information_Run
</UL>

<P><STRONG><a name="[1df]"></a>Del_SN_PassWord</STRONG> (Thumb, 876 bytes, Stack size 256 bytes, flash_rw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 620<LI>Call Chain = Del_SN_PassWord &rArr; Ev_Cat_Dat &rArr; SpiFlash_Read_Data &rArr; SpiFlash_Write_CMD &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_to_Block_Page
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Busy
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Read_Tab
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Erase_Sector
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Cat_Dat
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ev_Cat_Dat
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Write_Tab
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_to_Block_Sector
</UL>
<BR>[Called By]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_A_PassWord_Run
</UL>

<P><STRONG><a name="[87]"></a>ADD_Op_Door_Note</STRONG> (Thumb, 704 bytes, Stack size 64 bytes, flash_rw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 428<LI>Call Chain = ADD_Op_Door_Note &rArr; Ev_Cat_Dat &rArr; SpiFlash_Read_Data &rArr; SpiFlash_Write_CMD &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time_to_Unix
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_to_Block_Page
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Busy
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Read_Tab
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Erase_Sector
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Time
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Cat_Dat
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ev_Cat_Dat
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Write_Tab
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_to_Block_Sector
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PS_Print_Run
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pass_Word_Run
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_event_handler_O
</UL>

<P><STRONG><a name="[1e0]"></a>Read_Op_Note</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, flash_rw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 380<LI>Call Chain = Read_Op_Note &rArr; Get_Cat_Dat &rArr; SpiFlash_Read_Data &rArr; SpiFlash_Write_CMD &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Flash_Sleep
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Flash_Init
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_PowerDown
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_to_Block_Page
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Read_Tab
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Cat_Dat
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TX_Door_note
</UL>

<P><STRONG><a name="[1e1]"></a>More_Act_PassWord_Save</STRONG> (Thumb, 576 bytes, Stack size 80 bytes, flash_rw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 444<LI>Call Chain = More_Act_PassWord_Save &rArr; Ev_Cat_Dat &rArr; SpiFlash_Read_Data &rArr; SpiFlash_Write_CMD &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_to_Block_Page
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Busy
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Read_Tab
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Erase_Sector
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Cat_Dat
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ev_Cat_Dat
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_Soctor
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Write_Tab
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_to_Block_Sector
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Act_PassWord_Save
</UL>

<P><STRONG><a name="[b3]"></a>Act_PassWord_Save</STRONG> (Thumb, 248 bytes, Stack size 72 bytes, flash_rw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 516<LI>Call Chain = Act_PassWord_Save &rArr; More_Act_PassWord_Save &rArr; Ev_Cat_Dat &rArr; SpiFlash_Read_Data &rArr; SpiFlash_Write_CMD &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_to_Block_Page
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Busy
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Read_Tab
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Erase_Sector
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Cat_Dat
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ev_Cat_Dat
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;More_Act_PassWord_Save
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Write_Tab
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_to_Block_Sector
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Once_Act_PassWord_Verify
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pass_Word_Run
</UL>

<P><STRONG><a name="[b2]"></a>Per_Act_PassWord_Save</STRONG> (Thumb, 286 bytes, Stack size 56 bytes, flash_rw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 420<LI>Call Chain = Per_Act_PassWord_Save &rArr; Ev_Cat_Dat &rArr; SpiFlash_Read_Data &rArr; SpiFlash_Write_CMD &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_to_Block_Page
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Busy
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Read_Tab
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Erase_Sector
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Cat_Dat
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ev_Cat_Dat
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Write_Tab
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_to_Block_Sector
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pass_Word_Run
</UL>

<P><STRONG><a name="[ac]"></a>Act_PassWord_Verify</STRONG> (Thumb, 364 bytes, Stack size 48 bytes, flash_rw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = Act_PassWord_Verify &rArr; SPIFlash_Read_Tab &rArr; SpiFlash_Read_Data &rArr; SpiFlash_Write_CMD &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_to_Block_Page
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Busy
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Read_Tab
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Write_Tab
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_read
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_input
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pass_Word_Run
</UL>

<P><STRONG><a name="[ae]"></a>More_Act_PassWord_Verify</STRONG> (Thumb, 368 bytes, Stack size 56 bytes, flash_rw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 404<LI>Call Chain = More_Act_PassWord_Verify &rArr; Get_Cat_Dat &rArr; SpiFlash_Read_Data &rArr; SpiFlash_Write_CMD &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_to_Block_Page
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Read_Tab
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Cat_Dat
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_read
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_input
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pass_Word_Run
</UL>

<P><STRONG><a name="[1e5]"></a>Dle_A_More_Act_PassWord_Verify</STRONG> (Thumb, 344 bytes, Stack size 64 bytes, flash_rw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 428<LI>Call Chain = Dle_A_More_Act_PassWord_Verify &rArr; Ev_Cat_Dat &rArr; SpiFlash_Read_Data &rArr; SpiFlash_Write_CMD &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_to_Block_Page
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Busy
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Read_Tab
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Erase_Sector
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Cat_Dat
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ev_Cat_Dat
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_Soctor
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Write_Tab
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_to_Block_Sector
</UL>
<BR>[Called By]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_A_More_Act_PassWord_Run
</UL>

<P><STRONG><a name="[ad]"></a>Per_Act_PassWord_Verify</STRONG> (Thumb, 242 bytes, Stack size 40 bytes, flash_rw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 388<LI>Call Chain = Per_Act_PassWord_Verify &rArr; Get_Cat_Dat &rArr; SpiFlash_Read_Data &rArr; SpiFlash_Write_CMD &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_to_Block_Page
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Read_Tab
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Cat_Dat
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_read
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_input
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pass_Word_Run
</UL>

<P><STRONG><a name="[b1]"></a>Once_Act_PassWord_Verify</STRONG> (Thumb, 350 bytes, Stack size 32 bytes, flash_rw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 548<LI>Call Chain = Once_Act_PassWord_Verify &rArr; Act_PassWord_Save &rArr; More_Act_PassWord_Save &rArr; Ev_Cat_Dat &rArr; SpiFlash_Read_Data &rArr; SpiFlash_Write_CMD &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_to_Block_Page
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Read_Tab
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Cat_Dat
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Act_PassWord_Save
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pass_Word_Run
</UL>

<P><STRONG><a name="[1e6]"></a>History_Time_Act_PassWord</STRONG> (Thumb, 306 bytes, Stack size 40 bytes, flash_rw.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_to_Block_Page
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Busy
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Read_Tab
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Erase_Sector
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Cat_Dat
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ev_Cat_Dat
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Write_Tab
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_to_Block_Sector
</UL>

<P><STRONG><a name="[6f]"></a>Add_Flash_AD_TypeA_Data</STRONG> (Thumb, 1068 bytes, Stack size 72 bytes, flash_rw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 436<LI>Call Chain = Add_Flash_AD_TypeA_Data &rArr; Ev_Cat_Dat &rArr; SpiFlash_Read_Data &rArr; SpiFlash_Write_CMD &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_to_Block_Page
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Busy
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Read_Tab
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Erase_Sector
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Cat_Dat
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ev_Cat_Dat
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Write_Tab
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_to_Block_Sector
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Marnual_Add_Run
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Information_Run
</UL>

<P><STRONG><a name="[96]"></a>Erase_AD_TypeA_Sector</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, flash_rw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = Erase_AD_TypeA_Sector &rArr; SPIFlash_Erase_Sector &rArr; SpiFlash_Write_CMD &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Busy
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Erase_Sector
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_to_Block_Sector
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_1_Handler
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Information_Run
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_A_PassWord_Run
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Mate_Run
</UL>

<P><STRONG><a name="[73]"></a>Add_Flash_US_TypeA_Data</STRONG> (Thumb, 1056 bytes, Stack size 72 bytes, flash_rw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 436<LI>Call Chain = Add_Flash_US_TypeA_Data &rArr; Ev_Cat_Dat &rArr; SpiFlash_Read_Data &rArr; SpiFlash_Write_CMD &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_to_Block_Page
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Busy
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Read_Tab
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Erase_Sector
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Cat_Dat
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ev_Cat_Dat
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Write_Tab
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_to_Block_Sector
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Marnual_Add_Run
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Information_Run
</UL>

<P><STRONG><a name="[97]"></a>Erase_US_TypeA_Sector</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, flash_rw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = Erase_US_TypeA_Sector &rArr; SPIFlash_Erase_Sector &rArr; SpiFlash_Write_CMD &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Busy
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Erase_Sector
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_to_Block_Sector
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_1_Handler
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_User_Key
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Information_Run
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_A_PassWord_Run
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Mate_Run
</UL>

<P><STRONG><a name="[74]"></a>Add_Flash_AD_TypeB_Data</STRONG> (Thumb, 1134 bytes, Stack size 72 bytes, flash_rw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 436<LI>Call Chain = Add_Flash_AD_TypeB_Data &rArr; Ev_Cat_Dat &rArr; SpiFlash_Read_Data &rArr; SpiFlash_Write_CMD &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_to_Block_Page
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Busy
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Read_Tab
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Erase_Sector
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Cat_Dat
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ev_Cat_Dat
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Write_Tab
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_to_Block_Sector
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Marnual_Add_Run
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Information_Run
</UL>

<P><STRONG><a name="[75]"></a>Add_Flash_US_TypeB_Data</STRONG> (Thumb, 1148 bytes, Stack size 72 bytes, flash_rw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 436<LI>Call Chain = Add_Flash_US_TypeB_Data &rArr; Ev_Cat_Dat &rArr; SpiFlash_Read_Data &rArr; SpiFlash_Write_CMD &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_to_Block_Page
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Busy
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Read_Tab
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Erase_Sector
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Cat_Dat
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ev_Cat_Dat
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Write_Tab
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_to_Block_Sector
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Marnual_Add_Run
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Information_Run
</UL>

<P><STRONG><a name="[1e7]"></a>Del_AD_Type_A</STRONG> (Thumb, 358 bytes, Stack size 40 bytes, flash_rw.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_to_Block_Page
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Busy
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Read_Tab
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Cat_Dat
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ev_Cat_Dat
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Write_Tab
</UL>

<P><STRONG><a name="[1e8]"></a>Del_US_Type_A</STRONG> (Thumb, 354 bytes, Stack size 40 bytes, flash_rw.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_to_Block_Page
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Busy
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Read_Tab
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Cat_Dat
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ev_Cat_Dat
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Write_Tab
</UL>

<P><STRONG><a name="[1e9]"></a>Del_AD_Type_B</STRONG> (Thumb, 454 bytes, Stack size 48 bytes, flash_rw.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_to_Block_Page
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Busy
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Read_Tab
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Cat_Dat
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ev_Cat_Dat
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Write_Tab
</UL>

<P><STRONG><a name="[1ea]"></a>Del_US_Type_B</STRONG> (Thumb, 462 bytes, Stack size 48 bytes, flash_rw.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_to_Block_Page
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Busy
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Read_Tab
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Cat_Dat
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ev_Cat_Dat
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Write_Tab
</UL>

<P><STRONG><a name="[88]"></a>Need_TypeA_Data_SN</STRONG> (Thumb, 604 bytes, Stack size 88 bytes, flash_rw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 436<LI>Call Chain = Need_TypeA_Data_SN &rArr; Get_Cat_Dat &rArr; SpiFlash_Read_Data &rArr; SpiFlash_Write_CMD &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_to_Block_Page
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Read_Tab
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Cat_Dat
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_event_handler_O
</UL>

<P><STRONG><a name="[8c]"></a>Need_TypeB_Data_SN</STRONG> (Thumb, 752 bytes, Stack size 88 bytes, flash_rw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 436<LI>Call Chain = Need_TypeB_Data_SN &rArr; Get_Cat_Dat &rArr; SpiFlash_Read_Data &rArr; SpiFlash_Write_CMD &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_to_Block_Page
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Read_Tab
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Cat_Dat
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_event_handler_O
</UL>

<P><STRONG><a name="[98]"></a>Erase_AD_TypeB_Sector</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, flash_rw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = Erase_AD_TypeB_Sector &rArr; SPIFlash_Erase_Sector &rArr; SpiFlash_Write_CMD &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Busy
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Erase_Sector
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_to_Block_Sector
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_1_Handler
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Information_Run
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_A_PassWord_Run
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Mate_Run
</UL>

<P><STRONG><a name="[99]"></a>Erase_US_TypeB_Sector</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, flash_rw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = Erase_US_TypeB_Sector &rArr; SPIFlash_Erase_Sector &rArr; SpiFlash_Write_CMD &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Busy
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Erase_Sector
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_to_Block_Sector
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_1_Handler
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_User_Key
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Information_Run
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_A_PassWord_Run
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Mate_Run
</UL>

<P><STRONG><a name="[1eb]"></a>Add_Flash_PS_Print</STRONG> (Thumb, 464 bytes, Stack size 80 bytes, flash_rw.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Flash_Sleep
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Flash_Init
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_PowerDown
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_to_Block_Page
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Busy
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Read_Tab
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Erase_Sector
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Cat_Dat
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ev_Cat_Dat
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Write_Tab
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_to_Block_Sector
</UL>
<BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_PS_Lmage_Run
</UL>

<P><STRONG><a name="[1ec]"></a>Need_Of_Ps_Print_Data_IDLE_ID</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, flash_rw.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Flash_Sleep
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Flash_Init
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_PowerDown
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_to_Block_Page
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Read_Tab
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Cat_Dat
</UL>
<BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_PS_Lmage_Run
</UL>

<P><STRONG><a name="[cf]"></a>Opinion_PS_Print_Valid</STRONG> (Thumb, 496 bytes, Stack size 56 bytes, flash_rw.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time_to_Unix
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Flash_Sleep
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Flash_Init
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_PowerDown
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_to_Block_Page
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Read_Tab
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Time
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Cat_Dat
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PS_Print_Run
</UL>

<P><STRONG><a name="[1ed]"></a>Del_A_ID_PS_Print</STRONG> (Thumb, 320 bytes, Stack size 40 bytes, flash_rw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 404<LI>Call Chain = Del_A_ID_PS_Print &rArr; Ev_Cat_Dat &rArr; SpiFlash_Read_Data &rArr; SpiFlash_Write_CMD &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_to_Block_Page
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Busy
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Read_Tab
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Cat_Dat
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ev_Cat_Dat
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Write_Tab
</UL>
<BR>[Called By]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_A_PassWord_Run
</UL>

<P><STRONG><a name="[1cd]"></a>TSM12MC_Sen_Read</STRONG> (Thumb, 468 bytes, Stack size 24 bytes, flash_rw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = TSM12MC_Sen_Read &rArr; SPIFlash_Read_Tab &rArr; SpiFlash_Read_Data &rArr; SpiFlash_Write_CMD &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_to_Block_Page
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Busy
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Read_Tab
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_init
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSM12MC_Sen_Code_update
</UL>

<P><STRONG><a name="[1ee]"></a>TSM12MC_Sen_Code_update</STRONG> (Thumb, 126 bytes, Stack size 40 bytes, flash_rw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = TSM12MC_Sen_Code_update &rArr; TSM12MC_Sen_Read &rArr; SPIFlash_Read_Tab &rArr; SpiFlash_Read_Data &rArr; SpiFlash_Write_CMD &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSM12_Exit_Sleep_Mode
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_to_Block_Page
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Busy
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Erase_Sector
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Write_Tab
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_to_Block_Sector
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSM12_read_tast
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSM12MC_Sen_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Card_Run
</UL>

<P><STRONG><a name="[1ef]"></a>Lock_Mot_Init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, moto_run.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Lock_Mot_Init &rArr; nrf_gpio_cfg_output &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_output
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock_Open
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Normally_Open_Door_Run
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock_Close
</UL>

<P><STRONG><a name="[1f1]"></a>Lock_Mot_Default</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, moto_run.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Lock_Mot_Default &rArr; nrf_gpio_cfg_default &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_default
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock_Open
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Normally_Open_Door_Run
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock_Close
</UL>

<P><STRONG><a name="[86]"></a>Lock_Open</STRONG> (Thumb, 142 bytes, Stack size 8 bytes, moto_run.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = Lock_Open &rArr; input_speak &rArr; PS_LED_Run &rArr; Uart_Put_String &rArr; Uart_Start_TC &rArr; app_timer_start &rArr; timer_start_op_schedule &rArr; user_op_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_speak
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Moto_Timer_Init
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock_Mot_Default
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock_Mot_Init
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_Value
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PS_Print_Run
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pass_Word_Run
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_event_handler_O
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_OpenLock_Run
</UL>

<P><STRONG><a name="[1d0]"></a>Lock_Close</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, moto_run.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Lock_Close &rArr; Lock_Mot_Default &rArr; nrf_gpio_cfg_default &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock_Mot_Default
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock_Mot_Init
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_init
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Moto_Timer_Hander
</UL>

<P><STRONG><a name="[2a8]"></a>timer2_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, speak.o(.text), UNUSED)

<P><STRONG><a name="[10]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, speak.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[c1]"></a>auart_init</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, speak.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = auart_init &rArr; nrf_gpio_cfg_output
</UL>
<BR>[Calls]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_output
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_init
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_abus_byte
</UL>

<P><STRONG><a name="[2a9]"></a>auart_sleep</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, speak.o(.text), UNUSED)

<P><STRONG><a name="[1f9]"></a>LEDR_Close_Init</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, speak.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = LEDR_Close_Init &rArr; app_timer_start &rArr; timer_start_op_schedule &rArr; user_op_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_speak
</UL>

<P><STRONG><a name="[1fa]"></a>Buzzer_Error</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, speak.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___7_speak_c_4ad3d500__nrf_delay_us
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
</UL>
<BR>[Called By]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_Run
</UL>

<P><STRONG><a name="[1fc]"></a>Buzzer_Ok</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, speak.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___7_speak_c_4ad3d500__nrf_delay_us
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
</UL>
<BR>[Called By]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_Run
</UL>

<P><STRONG><a name="[1fd]"></a>Buzzer_Di</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, speak.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___7_speak_c_4ad3d500__nrf_delay_us
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
</UL>
<BR>[Called By]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_Run
</UL>

<P><STRONG><a name="[1fe]"></a>Buzzer_Cl</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, speak.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___7_speak_c_4ad3d500__nrf_delay_us
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
</UL>
<BR>[Called By]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_Run
</UL>

<P><STRONG><a name="[1ff]"></a>Buzzer_Run</STRONG> (Thumb, 270 bytes, Stack size 8 bytes, speak.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_Cl
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_Di
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_Ok
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_Error
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
</UL>

<P><STRONG><a name="[200]"></a>input_abus_byte</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, speak.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = input_abus_byte &rArr; auart_init &rArr; nrf_gpio_cfg_output
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auart_init
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___7_speak_c_4ad3d500__nrf_delay_us
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_speak
</UL>

<P><STRONG><a name="[71]"></a>input_speak</STRONG> (Thumb, 320 bytes, Stack size 8 bytes, speak.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = input_speak &rArr; PS_LED_Run &rArr; Uart_Put_String &rArr; Uart_Start_TC &rArr; app_timer_start &rArr; timer_start_op_schedule &rArr; user_op_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PS_LED_Run
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_abus_byte
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDR_Close_Init
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_init
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock_Open
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Card_Run
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PS_Print_Run
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FD_Key_Run
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pass_Word_Run
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_a_key
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_1_Handler
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_event_handler_O
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Marnual_Add_Run
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Key
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_Dat_Select
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mate_Command_Run
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Information_Run
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Mate_Run
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Normally_Open_Door_Run
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;More_Act_PassWord_Mode_Run
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_A_More_Act_PassWord_Run
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_PS_Lmage_Run
</UL>

<P><STRONG><a name="[202]"></a>ADC_F</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ADC_F &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_adc_read
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
</UL>

<P><STRONG><a name="[1d1]"></a>adc_init</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = adc_init &rArr; ADC_F &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_F
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_output
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_init
</UL>

<P><STRONG><a name="[205]"></a>ADC_N</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ADC_N &rArr; nrf_gpio_cfg_output &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_output
</UL>
<BR>[Called By]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_adc_read
</UL>

<P><STRONG><a name="[206]"></a>nrf_adc_read</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = nrf_adc_read &rArr; ADC_N &rArr; nrf_gpio_cfg_output &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_N
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_F
</UL>
<BR>[Called By]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_Value
</UL>

<P><STRONG><a name="[2aa]"></a>adc_stop</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, adc.o(.text), UNUSED)

<P><STRONG><a name="[c2]"></a>NRF_WDT_Init</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, nrf_wdt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c4]"></a>NRF_WDT_Feed</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, nrf_wdt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1cf]"></a>LED_BR_Init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, key_run.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = LED_BR_Init &rArr; nrf_gpio_cfg_output &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_output
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_init
</UL>

<P><STRONG><a name="[1cc]"></a>Read_Lock_Bon</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, key_run.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Read_Lock_Bon &rArr; nrf_gpio_cfg_input &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_read
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_input
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_init
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Time_Run
</UL>

<P><STRONG><a name="[c7]"></a>LOCK_OPEN_Init</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, key_run.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = LOCK_OPEN_Init &rArr; nrf_gpio_cfg_input &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_input
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1f5]"></a>Moto_Timer_Init</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, key_run.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Moto_Timer_Init &rArr; app_timer_start &rArr; timer_start_op_schedule &rArr; user_op_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock_Open
</UL>

<P><STRONG><a name="[20b]"></a>Del_A_More_Act_PassWord_Run</STRONG> (Thumb, 386 bytes, Stack size 152 bytes, ble_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 580<LI>Call Chain = Del_A_More_Act_PassWord_Run &rArr; Dle_A_More_Act_PassWord_Verify &rArr; Ev_Cat_Dat &rArr; SpiFlash_Read_Data &rArr; SpiFlash_Write_CMD &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_speak
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Flash_Sleep
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Flash_Init
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_PowerDown
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_TX_Run
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dle_A_More_Act_PassWord_Verify
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_Dat_Select
</UL>

<P><STRONG><a name="[20c]"></a>More_Act_PassWord_Mode_Run</STRONG> (Thumb, 350 bytes, Stack size 136 bytes, ble_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 500<LI>Call Chain = More_Act_PassWord_Mode_Run &rArr; Ev_Cat_Dat &rArr; SpiFlash_Read_Data &rArr; SpiFlash_Write_CMD &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_speak
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Flash_Sleep
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Flash_Init
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_PowerDown
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ev_Cat_Dat
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_TX_Run
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_Dat_Select
</UL>

<P><STRONG><a name="[20d]"></a>Normally_Open_Door_Run</STRONG> (Thumb, 364 bytes, Stack size 136 bytes, ble_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = Normally_Open_Door_Run &rArr; input_speak &rArr; PS_LED_Run &rArr; Uart_Put_String &rArr; Uart_Start_TC &rArr; app_timer_start &rArr; timer_start_op_schedule &rArr; user_op_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_speak
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_TX_Run
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock_Mot_Default
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock_Mot_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_Dat_Select
</UL>

<P><STRONG><a name="[210]"></a>Manual_Add_Card</STRONG> (Thumb, 344 bytes, Stack size 8 bytes, ble_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = Manual_Add_Card &rArr; Start_Key_Run &rArr; AC_advertising_init &rArr; ble_advertising_init &rArr; ble_advdata_set &rArr; adv_data_encode &rArr; uuid_list_encode &rArr; uuid_list_sized_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Key_Run
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_Dat_Select
</UL>

<P><STRONG><a name="[211]"></a>CL_Door_note</STRONG> (Thumb, 298 bytes, Stack size 136 bytes, ble_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 500<LI>Call Chain = CL_Door_note &rArr; Ev_Cat_Dat &rArr; SpiFlash_Read_Data &rArr; SpiFlash_Write_CMD &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Flash_Sleep
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Flash_Init
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_PowerDown
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ev_Cat_Dat
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_TX_Run
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_Dat_Select
</UL>

<P><STRONG><a name="[212]"></a>TX_Door_note</STRONG> (Thumb, 394 bytes, Stack size 144 bytes, ble_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 524<LI>Call Chain = TX_Door_note &rArr; Read_Op_Note &rArr; Get_Cat_Dat &rArr; SpiFlash_Read_Data &rArr; SpiFlash_Write_CMD &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_TX_Run
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Op_Note
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_Dat_Select
</UL>

<P><STRONG><a name="[213]"></a>Read_OP_Door_note</STRONG> (Thumb, 356 bytes, Stack size 136 bytes, ble_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 484<LI>Call Chain = Read_OP_Door_note &rArr; Get_Cat_Dat &rArr; SpiFlash_Read_Data &rArr; SpiFlash_Write_CMD &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Flash_Sleep
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Flash_Init
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_PowerDown
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Cat_Dat
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_TX_Run
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_Dat_Select
</UL>

<P><STRONG><a name="[214]"></a>Del_Mate_Run</STRONG> (Thumb, 360 bytes, Stack size 136 bytes, ble_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = Del_Mate_Run &rArr; ref_BLE_Adv &rArr; advertising_init &rArr; ble_advertising_init &rArr; ble_advdata_set &rArr; adv_data_encode &rArr; uuid_list_encode &rArr; uuid_list_sized_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_speak
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Flash_Sleep
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Flash_Init
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_PowerDown
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Busy
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Erase_Sector
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erase_US_TypeB_Sector
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erase_US_TypeA_Sector
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erase_AD_TypeB_Sector
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erase_AD_TypeA_Sector
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Devic_static_read
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_Flash_PassWord
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_Flash_OPEN_DOOR_NOTE
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_FlashWord_Num
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ref_BLE_Adv
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_TX_Run
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_Dat_Select
</UL>

<P><STRONG><a name="[215]"></a>Del_A_PassWord_Run</STRONG> (Thumb, 730 bytes, Stack size 144 bytes, ble_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 764<LI>Call Chain = Del_A_PassWord_Run &rArr; Del_SN_PassWord &rArr; Ev_Cat_Dat &rArr; SpiFlash_Read_Data &rArr; SpiFlash_Write_CMD &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Flash_Sleep
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Flash_Init
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_PowerDown
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Cat_Dat
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ev_Cat_Dat
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erase_US_TypeB_Sector
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erase_US_TypeA_Sector
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erase_AD_TypeB_Sector
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erase_AD_TypeA_Sector
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_TX_Run
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_A_ID_PS_Print
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_SN_PassWord
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_Dat_Select
</UL>

<P><STRONG><a name="[216]"></a>updata_Devic_Num</STRONG> (Thumb, 108 bytes, Stack size 88 bytes, ble_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = updata_Devic_Num &rArr; SpiFlash_Read_Data &rArr; SpiFlash_Write_CMD &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read_Data
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write_Data
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Busy
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Erase_Sector
</UL>
<BR>[Called By]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Information_Run
</UL>

<P><STRONG><a name="[217]"></a>Del_Information_Run</STRONG> (Thumb, 706 bytes, Stack size 152 bytes, ble_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 812<LI>Call Chain = Del_Information_Run &rArr; Del_User_PassWord &rArr; Del_A_Type_PS_Print &rArr; Ev_Cat_Dat &rArr; SpiFlash_Read_Data &rArr; SpiFlash_Write_CMD &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Flash_Sleep
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Flash_Init
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_PowerDown
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_to_Block_Page
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Busy
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Cat_Dat
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ev_Cat_Dat
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erase_US_TypeB_Sector
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erase_US_TypeA_Sector
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erase_AD_TypeB_Sector
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erase_AD_TypeA_Sector
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Devic_static_read
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_TX_Run
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updata_Devic_Num
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_User_PassWord
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Admin_PassWord
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Write_Tab
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_Dat_Select
</UL>

<P><STRONG><a name="[218]"></a>Add_Information_Run</STRONG> (Thumb, 1164 bytes, Stack size 200 bytes, ble_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 828<LI>Call Chain = Add_Information_Run &rArr; Add_Flash_PassWord &rArr; Ev_Cat_Dat &rArr; SpiFlash_Read_Data &rArr; SpiFlash_Write_CMD &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_speak
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Flash_Sleep
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Flash_Init
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_PowerDown
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Flash_US_TypeB_Data
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Flash_US_TypeA_Data
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Flash_AD_TypeB_Data
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Flash_AD_TypeA_Data
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_TX_Run
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Flash_PassWord
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_Dat_Select
</UL>

<P><STRONG><a name="[1d2]"></a>Batt_Value</STRONG> (Thumb, 182 bytes, Stack size 16 bytes, ble_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = Batt_Value &rArr; nrf_adc_read &rArr; ADC_N &rArr; nrf_gpio_cfg_output &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_adc_read
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_init
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock_Open
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Time_Run
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_OpenLock_Run
</UL>

<P><STRONG><a name="[219]"></a>APP_OpenLock_Run</STRONG> (Thumb, 722 bytes, Stack size 176 bytes, ble_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = APP_OpenLock_Run &rArr; Lock_Open &rArr; input_speak &rArr; PS_LED_Run &rArr; Uart_Put_String &rArr; Uart_Start_TC &rArr; app_timer_start &rArr; timer_start_op_schedule &rArr; user_op_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time_to_Unix
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSM12_Init
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Flash_Sleep
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Flash_Init
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_PowerDown
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock_Open
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Time
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Devic_static_read
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_TX_Run
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_Value
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update_Time
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lmul
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_Dat_Select
</UL>

<P><STRONG><a name="[21b]"></a>Get_Time_Run</STRONG> (Thumb, 418 bytes, Stack size 136 bytes, ble_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = Get_Time_Run &rArr; Batt_Value &rArr; nrf_adc_read &rArr; ADC_N &rArr; nrf_gpio_cfg_output &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Time
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_TX_Run
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Lock_Bon
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_Value
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_Dat_Select
</UL>

<P><STRONG><a name="[21c]"></a>Time_Ref_Run</STRONG> (Thumb, 518 bytes, Stack size 176 bytes, ble_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = Time_Ref_Run &rArr; Update_Time &rArr; CaculateWeekDay &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time_to_Unix
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Time
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_TX_Run
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update_Time
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lmul
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_Dat_Select
</UL>

<P><STRONG><a name="[21d]"></a>Mate_Command_Run</STRONG> (Thumb, 596 bytes, Stack size 136 bytes, ble_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = Mate_Command_Run &rArr; ref_BLE_Adv &rArr; advertising_init &rArr; ble_advertising_init &rArr; ble_advdata_set &rArr; adv_data_encode &rArr; uuid_list_encode &rArr; uuid_list_sized_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_speak
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Flash_Sleep
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Flash_Init
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_PowerDown
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Busy
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ev_Cat_Dat
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Devic_static_read
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ref_BLE_Adv
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_TX_Run
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Devic_Num
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_Dat_Select
</UL>

<P><STRONG><a name="[21e]"></a>BLE_Dat_Select</STRONG> (Thumb, 662 bytes, Stack size 8 bytes, ble_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 836<LI>Call Chain = BLE_Dat_Select &rArr; Add_Information_Run &rArr; Add_Flash_PassWord &rArr; Ev_Cat_Dat &rArr; SpiFlash_Read_Data &rArr; SpiFlash_Write_CMD &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_speak
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_Conner
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mate_Command_Run
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time_Ref_Run
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Time_Run
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_OpenLock_Run
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Information_Run
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Information_Run
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_A_PassWord_Run
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Mate_Run
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_OP_Door_note
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TX_Door_note
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_Door_note
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Manual_Add_Card
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Normally_Open_Door_Run
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;More_Act_PassWord_Mode_Run
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_A_More_Act_PassWord_Run
</UL>
<BR>[Called By]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_DAT_SW
</UL>

<P><STRONG><a name="[21f]"></a>BLE_DAT_SW</STRONG> (Thumb, 240 bytes, Stack size 24 bytes, ble_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 860<LI>Call Chain = BLE_DAT_SW &rArr; BLE_Dat_Select &rArr; Add_Information_Run &rArr; Add_Flash_PassWord &rArr; Ev_Cat_Dat &rArr; SpiFlash_Read_Data &rArr; SpiFlash_Write_CMD &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_Conner
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_Dat_Select
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Input
</UL>

<P><STRONG><a name="[51]"></a>Data_Input</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, ble_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 876<LI>Call Chain = Data_Input &rArr; BLE_DAT_SW &rArr; BLE_Dat_Select &rArr; Add_Information_Run &rArr; Add_Flash_PassWord &rArr; Ev_Cat_Dat &rArr; SpiFlash_Read_Data &rArr; SpiFlash_Write_CMD &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_DAT_SW
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nus_data_handler
</UL>

<P><STRONG><a name="[220]"></a>EX_BLE_ACK_Run</STRONG> (Thumb, 224 bytes, Stack size 40 bytes, ble_data.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_TX_Run
</UL>
<BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_PS_Lmage_Run
</UL>

<P><STRONG><a name="[221]"></a>Del_User_Key</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, ble_data.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Cat_Dat
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ev_Cat_Dat
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erase_US_TypeB_Sector
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erase_US_TypeA_Sector
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_User_PassWord
</UL>

<P><STRONG><a name="[72]"></a>Manual_Add_Card_ACK</STRONG> (Thumb, 462 bytes, Stack size 152 bytes, ble_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = Manual_Add_Card_ACK &rArr; BLE_TX_Run &rArr; ble_nus_string_send
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_TX_Run
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Marnual_Add_Run
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Key
</UL>

<P><STRONG><a name="[8a]"></a>Time_to_Unix</STRONG> (Thumb, 632 bytes, Stack size 40 bytes, unix_time.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = Time_to_Unix &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_init
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Opinion_PS_Print_Valid
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Card_Run
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADD_Op_Door_Note
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pass_Word_Run
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_event_handler_O
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time_Ref_Run
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_OpenLock_Run
</UL>

<P><STRONG><a name="[222]"></a>Unix_Time_to_Time</STRONG> (Thumb, 642 bytes, Stack size 32 bytes, unix_time.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[2ab]"></a>simple_uart_get</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, simple_uart.o(.text), UNUSED)

<P><STRONG><a name="[223]"></a>simple_uart_get_with_timeout</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, simple_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___13_simple_uart_c_5dda6715__nrf_delay_us
</UL>

<P><STRONG><a name="[225]"></a>simple_uart_put</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, simple_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Put_String
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simple_uart_putstring
</UL>

<P><STRONG><a name="[224]"></a>simple_uart_putstring</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, simple_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simple_uart_put
</UL>

<P><STRONG><a name="[9c]"></a>simple_uart_config</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, simple_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = simple_uart_config &rArr; nrf_gpio_cfg_input &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_input
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_output
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Start_TC
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
</UL>

<P><STRONG><a name="[229]"></a>enc_time_psw</STRONG> (Thumb, 1082 bytes, Stack size 192 bytes, act_password.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lmul
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[b0]"></a>des_psw</STRONG> (Thumb, 948 bytes, Stack size 216 bytes, act_password.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = des_psw &rArr; __aeabi_lmul &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lmul
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pass_Word_Run
</UL>

<P><STRONG><a name="[85]"></a>Data_Card_Run</STRONG> (Thumb, 1954 bytes, Stack size 128 bytes, act_password.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 492<LI>Call Chain = Data_Card_Run &rArr; Ev_Cat_Dat &rArr; SpiFlash_Read_Data &rArr; SpiFlash_Write_CMD &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_speak
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time_to_Unix
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Time
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Cat_Dat
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ev_Cat_Dat
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_read
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_input
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSM12MC_Sen_Code_update
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_event_handler_O
</UL>

<P><STRONG><a name="[22d]"></a>SPIByteCom</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, sky1311_drv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SPIByteCom &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Tranfer
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311ReadReg
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311ReadFifo
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311WriteFifo
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311WriteReg
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311WriteCmd
</UL>

<P><STRONG><a name="[22e]"></a>sky1311WriteCmd</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, sky1311_drv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = sky1311WriteCmd &rArr; SPIByteCom &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIByteCom
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311Reset
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311_fifo_tx
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311_fifo_rx
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_Authentication_Auto
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311Init_B
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311Init_A
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311Init
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bitCollisionTrans
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;piccHaltA
</UL>

<P><STRONG><a name="[231]"></a>sky1311WriteReg</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, sky1311_drv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = sky1311WriteReg &rArr; SPIByteCom &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIByteCom
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311Reset
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311RCFreqCali
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;irqClearAll
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkCardRemove
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkCardInit
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkCardDeinit
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311_fifo_tx
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;irqClear
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_Authentication
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_Authentication_Auto
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311TxCrcOff
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311TxCrcOn
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311RxCrcOff
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311RxCrcOn
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mifare1_WriteTest
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mifare1_ReadTest
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311Init_B
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311Init_A
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311Init
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;typeBOperate
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;typeAOperate
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bitRateSet
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcdAntennaOn
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearBitMask
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBitMask
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analogInit_B
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analogInit_A
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analogInit
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bitCollisionTrans
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;piccHaltA
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;piccSelectA
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;piccAntiA
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;piccWakeupA
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;piccRequestA
</UL>

<P><STRONG><a name="[7f]"></a>sky1311ReadReg</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, sky1311_drv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = sky1311ReadReg &rArr; SPIByteCom &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIByteCom
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311RCFreqCali
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkCardRemove
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311_run
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311_Read
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_event_handler_O
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311_fifo_tx
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311_fifo_rx
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_Authentication
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_Authentication_Auto
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mifare1_WriteTest
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearBitMask
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBitMask
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bitCollisionTrans
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;piccAntiA
</UL>

<P><STRONG><a name="[232]"></a>sky1311WriteFifo</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, sky1311_drv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = sky1311WriteFifo &rArr; SPIByteCom &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIByteCom
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311_fifo_tx
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bitCollisionTrans
</UL>

<P><STRONG><a name="[233]"></a>sky1311ReadFifo</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, sky1311_drv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = sky1311ReadFifo &rArr; SPIByteCom &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIByteCom
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
</UL>
<BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311_fifo_rx
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;piccAntiA
</UL>

<P><STRONG><a name="[234]"></a>sky1311RxCrcOn</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, mifare1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = sky1311RxCrcOn &rArr; sky1311WriteReg &rArr; SPIByteCom &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_Read
</UL>

<P><STRONG><a name="[235]"></a>sky1311RxCrcOff</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, mifare1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = sky1311RxCrcOff &rArr; sky1311WriteReg &rArr; SPIByteCom &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_Transfer
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_Restore
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_Decrement
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_Increment
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_Write
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_Authentication
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_Authentication_Auto
</UL>

<P><STRONG><a name="[236]"></a>sky1311TxCrcOn</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, mifare1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = sky1311TxCrcOn &rArr; sky1311WriteReg &rArr; SPIByteCom &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_Transfer
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_Restore
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_Decrement
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_Increment
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_Read
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_Write
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_Authentication
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_Authentication_Auto
</UL>

<P><STRONG><a name="[237]"></a>sky1311TxCrcOff</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, mifare1.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_Authentication
</UL>

<P><STRONG><a name="[238]"></a>M1_Authentication_Auto</STRONG> (Thumb, 292 bytes, Stack size 24 bytes, mifare1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = M1_Authentication_Auto &rArr; irqClearAll &rArr; sky1311WriteReg &rArr; SPIByteCom &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311ReadReg
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;irqClearAll
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;irqClear
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311TxCrcOn
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311RxCrcOff
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311WriteReg
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311WriteCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mifare1_WriteTest
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mifare1_ReadTest
</UL>

<P><STRONG><a name="[23a]"></a>M1_Authentication</STRONG> (Thumb, 378 bytes, Stack size 72 bytes, mifare1.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311ReadReg
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311_fifo_tx
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311_fifo_rx
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExchangeData
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311TxCrcOff
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311TxCrcOn
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311RxCrcOff
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311WriteReg
</UL>

<P><STRONG><a name="[23e]"></a>M1_Write</STRONG> (Thumb, 118 bytes, Stack size 48 bytes, mifare1.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExchangeData
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311TxCrcOn
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311RxCrcOff
</UL>
<BR>[Called By]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_PwdChange
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mifare1_WriteTest
</UL>

<P><STRONG><a name="[23f]"></a>M1_PwdChange</STRONG> (Thumb, 92 bytes, Stack size 40 bytes, mifare1.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mifare1_WriteTest
</UL>

<P><STRONG><a name="[240]"></a>M1_Read</STRONG> (Thumb, 50 bytes, Stack size 48 bytes, mifare1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = M1_Read &rArr; ExchangeData &rArr; sky1311_fifo_rx &rArr; irqClearAll &rArr; sky1311WriteReg &rArr; SPIByteCom &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExchangeData
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311TxCrcOn
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311RxCrcOn
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mifare1_ReadTest
</UL>

<P><STRONG><a name="[241]"></a>M1_Increment</STRONG> (Thumb, 142 bytes, Stack size 48 bytes, mifare1.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExchangeData
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311TxCrcOn
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311RxCrcOff
</UL>

<P><STRONG><a name="[242]"></a>M1_Decrement</STRONG> (Thumb, 160 bytes, Stack size 48 bytes, mifare1.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExchangeData
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311TxCrcOn
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311RxCrcOff
</UL>

<P><STRONG><a name="[243]"></a>M1_Restore</STRONG> (Thumb, 72 bytes, Stack size 40 bytes, mifare1.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExchangeData
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311TxCrcOn
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311RxCrcOff
</UL>

<P><STRONG><a name="[244]"></a>M1_Transfer</STRONG> (Thumb, 72 bytes, Stack size 40 bytes, mifare1.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExchangeData
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311TxCrcOn
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311RxCrcOff
</UL>

<P><STRONG><a name="[245]"></a>piccRequestB</STRONG> (Thumb, 128 bytes, Stack size 56 bytes, iso14443b.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = piccRequestB &rArr; ExchangeData &rArr; sky1311_fifo_rx &rArr; irqClearAll &rArr; sky1311WriteReg &rArr; SPIByteCom &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExchangeData
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Type_B_Rrun
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeB_test
</UL>

<P><STRONG><a name="[246]"></a>piccSlotMarker</STRONG> (Thumb, 118 bytes, Stack size 48 bytes, iso14443b.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExchangeData
</UL>

<P><STRONG><a name="[247]"></a>piccAttrib</STRONG> (Thumb, 196 bytes, Stack size 80 bytes, iso14443b.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = piccAttrib &rArr; ExchangeData &rArr; sky1311_fifo_rx &rArr; irqClearAll &rArr; sky1311WriteReg &rArr; SPIByteCom &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExchangeData
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Type_B_Rrun
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeB_test
</UL>

<P><STRONG><a name="[248]"></a>piccHaltB</STRONG> (Thumb, 56 bytes, Stack size 32 bytes, iso14443b.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExchangeData
</UL>

<P><STRONG><a name="[249]"></a>piccDeselectB</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, iso14443b.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExchangeData
</UL>

<P><STRONG><a name="[24a]"></a>piccRequestA</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, iso14443a.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExchangeData
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311WriteReg
</UL>

<P><STRONG><a name="[24b]"></a>piccWakeupA</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, iso14443a.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = piccWakeupA &rArr; ExchangeData &rArr; sky1311_fifo_rx &rArr; irqClearAll &rArr; sky1311WriteReg &rArr; SPIByteCom &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExchangeData
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Type_A_Rrun
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Type_A_Null_Key_Rrun
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_test
</UL>

<P><STRONG><a name="[24c]"></a>piccAntiA</STRONG> (Thumb, 470 bytes, Stack size 80 bytes, iso14443a.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = piccAntiA &rArr; bitCollisionTrans &rArr; irqClearAll &rArr; sky1311WriteReg &rArr; SPIByteCom &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311ReadReg
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311ReadFifo
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311WriteReg
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bitCollisionTrans
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Type_A_Rrun
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Type_A_Null_Key_Rrun
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_test
</UL>

<P><STRONG><a name="[24f]"></a>piccSelectA</STRONG> (Thumb, 104 bytes, Stack size 48 bytes, iso14443a.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = piccSelectA &rArr; ExchangeData &rArr; sky1311_fifo_rx &rArr; irqClearAll &rArr; sky1311WriteReg &rArr; SPIByteCom &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExchangeData
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Type_A_Rrun
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Type_A_Null_Key_Rrun
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_test
</UL>

<P><STRONG><a name="[250]"></a>piccHaltA</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, iso14443a.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311WriteReg
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311WriteCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mifare1_WriteTest
</UL>

<P><STRONG><a name="[251]"></a>piccDeselectA</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, iso14443a.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExchangeData
</UL>

<P><STRONG><a name="[252]"></a>piccATS</STRONG> (Thumb, 182 bytes, Stack size 32 bytes, iso14443a.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExchangeData
</UL>
<BR>[Called By]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smartTypeA_test
</UL>

<P><STRONG><a name="[253]"></a>piccPPS</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, iso14443a.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExchangeData
</UL>

<P><STRONG><a name="[254]"></a>SetBitMask</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, sky1311t.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311ReadReg
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetPicc
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcdAntennaOn
</UL>

<P><STRONG><a name="[255]"></a>ClearBitMask</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, sky1311t.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311ReadReg
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetPicc
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcdAntennaOff
</UL>

<P><STRONG><a name="[256]"></a>pcdAntennaOn</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, sky1311t.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311WriteReg
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBitMask
</UL>

<P><STRONG><a name="[257]"></a>pcdAntennaOff</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, sky1311t.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearBitMask
</UL>

<P><STRONG><a name="[65]"></a>irqClearAll</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, sky1311t.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = irqClearAll &rArr; sky1311WriteReg &rArr; SPIByteCom &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkCardInit
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_SKY1311_IRQ
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311_run
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311_Read
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKY1311_State
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_event_handler_O
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Key_Run
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_LED_Cheak_RC_Value
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKY1311_RC_VALUE
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Key
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_timer_handler
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311_fifo_tx
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311_fifo_rx
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_Authentication_Auto
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bitCollisionTrans
</UL>

<P><STRONG><a name="[239]"></a>irqClear</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, sky1311t.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = irqClear &rArr; sky1311WriteReg &rArr; SPIByteCom &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311_fifo_tx
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311_fifo_rx
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_Authentication_Auto
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bitCollisionTrans
</UL>

<P><STRONG><a name="[258]"></a>bitRateSet</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, sky1311t.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311WriteReg
</UL>

<P><STRONG><a name="[259]"></a>typeAOperate</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, sky1311t.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = typeAOperate &rArr; sky1311WriteReg &rArr; SPIByteCom &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Type_A_Rrun
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Type_A_Null_Key_Rrun
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_test
</UL>

<P><STRONG><a name="[25a]"></a>typeBOperate</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, sky1311t.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = typeBOperate &rArr; sky1311WriteReg &rArr; SPIByteCom &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Type_B_Rrun
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeB_test
</UL>

<P><STRONG><a name="[25e]"></a>sky1311Init</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, sky1311t.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMS
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311WriteReg
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311WriteCmd
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analogInit
</UL>
<BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKY1311_Init
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_test
</UL>

<P><STRONG><a name="[25f]"></a>sky1311Init_A</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, sky1311t.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = sky1311Init_A &rArr; analogInit_A &rArr; sky1311WriteReg &rArr; SPIByteCom &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMS
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311WriteReg
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311WriteCmd
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analogInit_A
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Type_A_Rrun
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Type_A_Null_Key_Rrun
</UL>

<P><STRONG><a name="[260]"></a>sky1311Init_B</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, sky1311t.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = sky1311Init_B &rArr; analogInit_B &rArr; sky1311WriteReg &rArr; SPIByteCom &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMS
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311WriteReg
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311WriteCmd
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analogInit_B
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Type_B_Rrun
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeB_test
</UL>

<P><STRONG><a name="[66]"></a>sky1311Reset</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, sky1311t.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = sky1311Reset &rArr; sky1311WriteReg &rArr; SPIByteCom &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311WriteReg
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311WriteCmd
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkCardInit
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Type_B_Rrun
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Type_A_Rrun
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Type_A_Null_Key_Rrun
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311_run
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311_Read
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKY1311_State
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_event_handler_O
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Key_Run
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_LED_Cheak_RC_Value
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKY1311_RC_VALUE
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Key
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_timer_handler
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKY1311_DeInit
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeB_test
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_test
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smartTypeA_test
</UL>

<P><STRONG><a name="[262]"></a>resetPicc</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, sky1311t.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMS
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearBitMask
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBitMask
</UL>

<P><STRONG><a name="[23c]"></a>sky1311_fifo_tx</STRONG> (Thumb, 324 bytes, Stack size 24 bytes, sky1311t.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = sky1311_fifo_tx &rArr; irqClearAll &rArr; sky1311WriteReg &rArr; SPIByteCom &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311ReadReg
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;irqClearAll
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;irqClear
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311WriteFifo
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311WriteReg
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311WriteCmd
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_read
</UL>
<BR>[Called By]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExchangeData
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_Authentication
</UL>

<P><STRONG><a name="[23d]"></a>sky1311_fifo_rx</STRONG> (Thumb, 398 bytes, Stack size 48 bytes, sky1311t.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = sky1311_fifo_rx &rArr; irqClearAll &rArr; sky1311WriteReg &rArr; SPIByteCom &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311ReadReg
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;irqClearAll
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;irqClear
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311ReadFifo
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311WriteCmd
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_read
</UL>
<BR>[Called By]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExchangeData
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_Authentication
</UL>

<P><STRONG><a name="[23b]"></a>ExchangeData</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, sky1311t.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = ExchangeData &rArr; sky1311_fifo_rx &rArr; irqClearAll &rArr; sky1311WriteReg &rArr; SPIByteCom &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311_fifo_tx
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311_fifo_rx
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Type_B_Rrun
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;piccDeselectB
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;piccHaltB
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;piccAttrib
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;piccSlotMarker
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;piccRequestB
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_Transfer
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_Restore
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_Decrement
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_Increment
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_Read
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_Write
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_Authentication
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeB_test
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smartTypeA_test
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;piccPPS
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;piccATS
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;piccDeselectA
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;piccSelectA
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;piccWakeupA
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;piccRequestA
</UL>

<P><STRONG><a name="[24d]"></a>bitCollisionTrans</STRONG> (Thumb, 272 bytes, Stack size 24 bytes, sky1311t.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = bitCollisionTrans &rArr; irqClearAll &rArr; sky1311WriteReg &rArr; SPIByteCom &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311ReadReg
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;irqClearAll
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;irqClear
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311WriteFifo
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311WriteReg
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311WriteCmd
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_read
</UL>
<BR>[Called By]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;piccAntiA
</UL>

<P><STRONG><a name="[69]"></a>sky1311RCFreqCali</STRONG> (Thumb, 196 bytes, Stack size 24 bytes, sky1311t.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = sky1311RCFreqCali &rArr; sky1311ReadReg &rArr; SPIByteCom &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311ReadReg
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMS
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311WriteReg
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311_run
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311_Read
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_LED_Cheak_RC_Value
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKY1311_RC_VALUE
</UL>

<P><STRONG><a name="[7b]"></a>checkCardInit</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, sky1311t.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = checkCardInit &rArr; sky1311Reset &rArr; sky1311WriteReg &rArr; SPIByteCom &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311Reset
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;irqClearAll
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMS
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311WriteReg
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311_run
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311_Read
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKY1311_State
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_event_handler_O
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Key_Run
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Key
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_timer_handler
</UL>

<P><STRONG><a name="[80]"></a>checkCardDeinit</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, sky1311t.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = checkCardDeinit &rArr; sky1311WriteReg &rArr; SPIByteCom &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMS
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311WriteReg
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311_run
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311_Read
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_event_handler_O
</UL>

<P><STRONG><a name="[8f]"></a>checkCardRemove</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, sky1311t.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = checkCardRemove &rArr; sky1311ReadReg &rArr; SPIByteCom &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311ReadReg
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMS
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311WriteReg
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311_run
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311_Read
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKY1311_State
</UL>

<P><STRONG><a name="[265]"></a>mifare1_ReadTest</STRONG> (Thumb, 188 bytes, Stack size 56 bytes, cardoper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = mifare1_ReadTest &rArr; M1_Read &rArr; ExchangeData &rArr; sky1311_fifo_rx &rArr; irqClearAll &rArr; sky1311WriteReg &rArr; SPIByteCom &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_Read
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_Authentication_Auto
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Type_A_Rrun
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_test
</UL>

<P><STRONG><a name="[266]"></a>mifare1_WriteTest</STRONG> (Thumb, 144 bytes, Stack size 64 bytes, cardoper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311ReadReg
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_PwdChange
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_Write
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M1_Authentication_Auto
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311WriteReg
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;piccHaltA
</UL>
<BR>[Called By]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_test
</UL>

<P><STRONG><a name="[267]"></a>smartTypeA_test</STRONG> (Thumb, 100 bytes, Stack size 120 bytes, cardoper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311Reset
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExchangeData
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;piccATS
</UL>
<BR>[Called By]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_test
</UL>

<P><STRONG><a name="[268]"></a>TypeA_test</STRONG> (Thumb, 308 bytes, Stack size 64 bytes, cardoper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311Reset
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMS
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smartTypeA_test
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mifare1_WriteTest
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mifare1_ReadTest
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311Init
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;typeAOperate
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;piccSelectA
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;piccAntiA
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;piccWakeupA
</UL>

<P><STRONG><a name="[81]"></a>Type_A_Rrun</STRONG> (Thumb, 526 bytes, Stack size 64 bytes, cardoper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = Type_A_Rrun &rArr; mifare1_ReadTest &rArr; M1_Read &rArr; ExchangeData &rArr; sky1311_fifo_rx &rArr; irqClearAll &rArr; sky1311WriteReg &rArr; SPIByteCom &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311Reset
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMS
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mifare1_ReadTest
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311Init_A
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;typeAOperate
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;piccSelectA
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;piccAntiA
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;piccWakeupA
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311_run
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311_Read
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_event_handler_O
</UL>

<P><STRONG><a name="[83]"></a>Type_A_Null_Key_Rrun</STRONG> (Thumb, 432 bytes, Stack size 64 bytes, cardoper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = Type_A_Null_Key_Rrun &rArr; piccSelectA &rArr; ExchangeData &rArr; sky1311_fifo_rx &rArr; irqClearAll &rArr; sky1311WriteReg &rArr; SPIByteCom &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311Reset
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMS
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311Init_A
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;typeAOperate
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;piccSelectA
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;piccAntiA
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;piccWakeupA
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_event_handler_O
</UL>

<P><STRONG><a name="[26a]"></a>TypeB_test</STRONG> (Thumb, 184 bytes, Stack size 152 bytes, cardoper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311Reset
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMS
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;piccAttrib
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;piccRequestB
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExchangeData
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311Init_B
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;typeBOperate
</UL>

<P><STRONG><a name="[82]"></a>Type_B_Rrun</STRONG> (Thumb, 224 bytes, Stack size 152 bytes, cardoper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = Type_B_Rrun &rArr; piccAttrib &rArr; ExchangeData &rArr; sky1311_fifo_rx &rArr; irqClearAll &rArr; sky1311WriteReg &rArr; SPIByteCom &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311Reset
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMS
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;piccAttrib
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;piccRequestB
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExchangeData
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311Init_B
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;typeBOperate
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311_run
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311_Read
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_event_handler_O
</UL>

<P><STRONG><a name="[24e]"></a>delay</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, stm8_eval.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = delay
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___11_stm8_eval_c_868ffd43__nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311RCFreqCali
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkCardRemove
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analogInit_B
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analogInit_A
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analogInit
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;piccAntiA
</UL>

<P><STRONG><a name="[2ac]"></a>TimingDelay_Init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm8_eval.o(.text), UNUSED)

<P><STRONG><a name="[bb]"></a>DelayMS</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, stm8_eval.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DelayMS &rArr; nrf_delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311RCFreqCali
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkCardRemove
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkCardInit
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkCardDeinit
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Type_B_Rrun
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Type_A_Rrun
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Type_A_Null_Key_Rrun
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311_run
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311_Read
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeB_test
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_test
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetPicc
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311Init_B
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311Init_A
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311Init
</UL>

<P><STRONG><a name="[26b]"></a>SKY1311_SPI_Init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, stm8_eval.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SKY1311_SPI_Init &rArr; nrf_gpio_cfg_output
</UL>
<BR>[Calls]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_output
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_Init
</UL>

<P><STRONG><a name="[26e]"></a>SKY1311_Init</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, stm8_eval.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311Init
</UL>

<P><STRONG><a name="[26f]"></a>SKY1311_DeInit</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, stm8_eval.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311Reset
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
</UL>

<P><STRONG><a name="[2ad]"></a>LED_Init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm8_eval.o(.text), UNUSED)

<P><STRONG><a name="[2ae]"></a>I2C_Interface_Init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm8_eval.o(.text), UNUSED)

<P><STRONG><a name="[2af]"></a>Uart_Inerface_Init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm8_eval.o(.text), UNUSED)

<P><STRONG><a name="[2b0]"></a>uart_putChar</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm8_eval.o(.text), UNUSED)

<P><STRONG><a name="[2b1]"></a>uart_sendData</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm8_eval.o(.text), UNUSED)

<P><STRONG><a name="[2b2]"></a>uart_putHex</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm8_eval.o(.text), UNUSED)

<P><STRONG><a name="[2b3]"></a>uart_printBuffer</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm8_eval.o(.text), UNUSED)

<P><STRONG><a name="[2b4]"></a>uart_puts</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm8_eval.o(.text), UNUSED)

<P><STRONG><a name="[2b5]"></a>uart_newrow</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm8_eval.o(.text), UNUSED)

<P><STRONG><a name="[2b6]"></a>systemClk_Init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm8_eval.o(.text), UNUSED)

<P><STRONG><a name="[2b7]"></a>IRQ_Init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm8_eval.o(.text), UNUSED)

<P><STRONG><a name="[2b8]"></a>IRQ_DeInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm8_eval.o(.text), UNUSED)

<P><STRONG><a name="[2b9]"></a>systemGPIOInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm8_eval.o(.text), UNUSED)

<P><STRONG><a name="[b9]"></a>system_Init</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm8_eval.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = system_Init &rArr; SKY1311_SPI_Init &rArr; nrf_gpio_cfg_output
</UL>
<BR>[Calls]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKY1311_SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311_run
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311_Init
</UL>

<P><STRONG><a name="[1cb]"></a>I2C_GPIO_init</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, mpr121.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = I2C_GPIO_init &rArr; nrf_gpio_cfg_output &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_output
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_init
</UL>

<P><STRONG><a name="[273]"></a>I2C_delay</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, mpr121.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2C_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___8_MPR121_C_9b5df030__nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_READ_BYTE
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WRITE_BYTE
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SEND_ACK
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WAIT_ACK
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_STOP
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_START
</UL>

<P><STRONG><a name="[274]"></a>I2C_START</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, mpr121.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2C_START &rArr; I2C_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_delay
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
</UL>
<BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_i2c
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_i2c
</UL>

<P><STRONG><a name="[276]"></a>I2C_STOP</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, mpr121.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2C_STOP &rArr; I2C_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_delay
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
</UL>
<BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_i2c
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_i2c
</UL>

<P><STRONG><a name="[277]"></a>I2C_WAIT_ACK</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, mpr121.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2C_WAIT_ACK &rArr; I2C_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_delay
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_read
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
</UL>
<BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_i2c
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_i2c
</UL>

<P><STRONG><a name="[279]"></a>I2C_SEND_ACK</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, mpr121.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2C_SEND_ACK &rArr; I2C_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_delay
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
</UL>
<BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_i2c
</UL>

<P><STRONG><a name="[27a]"></a>I2C_WRITE_BYTE</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, mpr121.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = I2C_WRITE_BYTE &rArr; I2C_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_delay
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
</UL>
<BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_i2c
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_i2c
</UL>

<P><STRONG><a name="[27b]"></a>I2C_READ_BYTE</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, mpr121.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = I2C_READ_BYTE &rArr; I2C_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_delay
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_read
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
</UL>
<BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_i2c
</UL>

<P><STRONG><a name="[27c]"></a>write_i2c</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, mpr121.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = write_i2c &rArr; I2C_WRITE_BYTE &rArr; I2C_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WRITE_BYTE
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WAIT_ACK
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_STOP
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_START
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSM12_Init
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSM12_Exit_Sleep_Mode
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSM12_Into_Sleep_Mode
</UL>

<P><STRONG><a name="[27d]"></a>read_i2c</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, mpr121.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = read_i2c &rArr; I2C_READ_BYTE &rArr; I2C_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_READ_BYTE
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WRITE_BYTE
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SEND_ACK
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WAIT_ACK
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_STOP
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_START
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSM12_read_key_Num
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSM12_read_tast
</UL>

<P><STRONG><a name="[2ba]"></a>mpr121_init_I</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, mpr121.o(.text), UNUSED)

<P><STRONG><a name="[b6]"></a>mpr121_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, mpr121.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Key
</UL>

<P><STRONG><a name="[2bb]"></a>mpr121_Run_I</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, mpr121.o(.text), UNUSED)

<P><STRONG><a name="[67]"></a>mpr121_Run</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, mpr121.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_event_handler_O
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKY1311_RC_VALUE
</UL>

<P><STRONG><a name="[2bc]"></a>MSR_121_READ</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, mpr121.o(.text), UNUSED)

<P><STRONG><a name="[2bd]"></a>MPR121_CL_Key</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, mpr121.o(.text), UNUSED)

<P><STRONG><a name="[2be]"></a>MSR_121_read_key</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, mpr121.o(.text), UNUSED)

<P><STRONG><a name="[a6]"></a>MPR121_Key_Run</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, mpr121.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_a_key
</UL>

<P><STRONG><a name="[6a]"></a>TSM12_Init</STRONG> (Thumb, 170 bytes, Stack size 8 bytes, mpr121.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = TSM12_Init &rArr; write_i2c &rArr; I2C_WRITE_BYTE &rArr; I2C_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_i2c
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_init
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKY1311_RC_VALUE
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Key
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_timer_handler
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_OpenLock_Run
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSM12_read_tast
</UL>

<P><STRONG><a name="[27e]"></a>TSM12_Into_Sleep_Mode</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, mpr121.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_i2c
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
</UL>

<P><STRONG><a name="[7a]"></a>TSM12_Exit_Sleep_Mode</STRONG> (Thumb, 170 bytes, Stack size 8 bytes, mpr121.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = TSM12_Exit_Sleep_Mode &rArr; write_i2c &rArr; I2C_WRITE_BYTE &rArr; I2C_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_i2c
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_event_handler_O
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Key_Run
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Key
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSM12MC_Sen_Code_update
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSM12_read_tast
</UL>

<P><STRONG><a name="[1ce]"></a>TSM12_read_tast</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, mpr121.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = TSM12_read_tast &rArr; TSM12_Init &rArr; write_i2c &rArr; I2C_WRITE_BYTE &rArr; I2C_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSM12_Init
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSM12_Exit_Sleep_Mode
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_i2c
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_init
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSM12MC_Sen_Code_update
</UL>

<P><STRONG><a name="[b4]"></a>TSM12_read_key_Num</STRONG> (Thumb, 806 bytes, Stack size 32 bytes, mpr121.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = TSM12_read_key_Num &rArr; read_i2c &rArr; I2C_READ_BYTE &rArr; I2C_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_i2c
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Key
</UL>

<P><STRONG><a name="[cd]"></a>Uart_Put_String</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, uart_run.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Uart_Put_String &rArr; Uart_Start_TC &rArr; app_timer_start &rArr; timer_start_op_schedule &rArr; user_op_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Start_TC
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simple_uart_put
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;F_print_Goto_Sleep
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_PS_Print_Run
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PS_Print_Run
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PS_LED_Run
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PS_LED_Shutdown
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_Ps_Print
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_PS_Lmage_Run
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A71_RF_RX_MODE
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A71_Data_TX
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A71_Send_RX
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A71_Send_PD
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A71_Send_ID
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A71_Send_Init
</UL>

<P><STRONG><a name="[c9]"></a>Uart_Get_String</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, uart_run.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;F_Print_Input_Ps_Run
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A71_TX_Dat
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Need_Of_RX_Dat
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A71_RF_RX_MODE
</UL>

<P><STRONG><a name="[285]"></a>A71_Dat_Cheak</STRONG> (Thumb, 126 bytes, Stack size 8 bytes, uart_run.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A71_TX_Dat
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Need_Of_RX_Dat
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A71_RF_RX_MODE
</UL>

<P><STRONG><a name="[27f]"></a>A71_Send_Init</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, uart_run.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Put_String
</UL>

<P><STRONG><a name="[280]"></a>A71_Send_ID</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, uart_run.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Put_String
</UL>

<P><STRONG><a name="[281]"></a>A71_Send_PD</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, uart_run.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Put_String
</UL>

<P><STRONG><a name="[282]"></a>A71_Send_RX</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, uart_run.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Put_String
</UL>
<BR>[Called By]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A71_RF_RX_MODE
</UL>

<P><STRONG><a name="[283]"></a>A71_Data_TX</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, uart_run.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Put_String
</UL>
<BR>[Called By]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A71_TX_Dat
</UL>

<P><STRONG><a name="[284]"></a>A71_RF_RX_MODE</STRONG> (Thumb, 220 bytes, Stack size 16 bytes, uart_run.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Put_String
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Get_String
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A71_Send_RX
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A71_Dat_Cheak
</UL>
<BR>[Called By]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Need_Of_RX_Dat
</UL>

<P><STRONG><a name="[286]"></a>Need_Of_RX_Dat</STRONG> (Thumb, 290 bytes, Stack size 16 bytes, uart_run.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Get_String
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A71_RF_RX_MODE
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A71_Dat_Cheak
</UL>

<P><STRONG><a name="[287]"></a>A71_TX_Dat</STRONG> (Thumb, 254 bytes, Stack size 16 bytes, uart_run.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Get_String
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A71_Data_TX
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A71_Dat_Cheak
</UL>

<P><STRONG><a name="[201]"></a>PS_LED_Run</STRONG> (Thumb, 350 bytes, Stack size 72 bytes, f_print.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = PS_LED_Run &rArr; Uart_Put_String &rArr; Uart_Start_TC &rArr; app_timer_start &rArr; timer_start_op_schedule &rArr; user_op_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Put_String
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_speak
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Controllable_Power_No
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_PS_Lmage_Run
</UL>

<P><STRONG><a name="[d1]"></a>Controllable_Power_No</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, f_print.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PS_LED_Run
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_PS_Print_Run
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_PS_Lmage_Run
</UL>

<P><STRONG><a name="[bf]"></a>Controllable_Power_Off</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, f_print.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_PS_Print_Run
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PS_Print_Run
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Close_Hander
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PS_Input_Order_Run
</UL>

<P><STRONG><a name="[288]"></a>PS_Input_Order_Run</STRONG> (Thumb, 332 bytes, Stack size 68 bytes, f_print.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Controllable_Power_Off
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PS_Data_Cheak
</UL>

<P><STRONG><a name="[289]"></a>PS_Data_Cheak</STRONG> (Thumb, 348 bytes, Stack size 80 bytes, f_print.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PS_Input_Order_Run
</UL>

<P><STRONG><a name="[ce]"></a>F_print_Goto_Sleep</STRONG> (Thumb, 208 bytes, Stack size 72 bytes, f_print.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Put_String
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_PS_Print_Run
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PS_Print_Run
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_PS_Lmage_Run
</UL>

<P><STRONG><a name="[28a]"></a>Input_PS_Lmage_Run</STRONG> (Thumb, 2360 bytes, Stack size 88 bytes, f_print.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_speak
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Put_String
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;F_print_Goto_Sleep
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Controllable_Power_No
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EX_BLE_ACK_Run
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PS_LED_Run
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Need_Of_Ps_Print_Data_IDLE_ID
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Flash_PS_Print
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_PS_Lmage
</UL>

<P><STRONG><a name="[ca]"></a>Input_PS_Lmage</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, f_print.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_PS_Lmage_Run
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;F_Print_Input_Ps_Run
</UL>

<P><STRONG><a name="[28b]"></a>CL_Ps_Print</STRONG> (Thumb, 220 bytes, Stack size 72 bytes, f_print.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Put_String
</UL>

<P><STRONG><a name="[28c]"></a>PS_LED_Shutdown</STRONG> (Thumb, 40 bytes, Stack size 72 bytes, f_print.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Put_String
</UL>

<P><STRONG><a name="[2bf]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[af]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_clear
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_page_erase_required
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_tail_data_page_swap_required
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;state_restore_tail_entry_run
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;state_swap_erase_entry_run
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_operation_execute
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;state_data_erase_swap_entry_run
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_flash_page_end
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;des_psw
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADD_Op_Door_Note
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pass_Word_Run
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc_time_psw
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_User_PassWord
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Admin_PassWord
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_Value
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[2c0]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, idiv.o(.text), UNUSED)

<P><STRONG><a name="[159]"></a>__aeabi_idivmod</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, idiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CaculateWeekDay
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_clear
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_register
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tail_word_size_calculate
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time_to_Unix
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Unix_Time_to_Time
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Op_Note
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update_Time
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_PS_Lmage_Run
</UL>

<P><STRONG><a name="[1ca]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, uldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;des_psw
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Card_Run
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc_time_psw
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update_Time
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
</UL>

<P><STRONG><a name="[22a]"></a>__aeabi_ldivmod</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, ldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc_time_psw
</UL>

<P><STRONG><a name="[21a]"></a>__aeabi_lmul</STRONG> (Thumb, 122 bytes, Stack size 64 bytes, llmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_lmul &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;des_psw
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc_time_psw
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time_Ref_Run
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_OpenLock_Run
</UL>

<P><STRONG><a name="[2c1]"></a>_ll_mul</STRONG> (Thumb, 0 bytes, Stack size 64 bytes, llmul.o(.text), UNUSED)

<P><STRONG><a name="[e1]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_load
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_change_conn_params
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_conn_params_update
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_connect
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;service_data_encode
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;manuf_specific_data_encode
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_device_addr_encode
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_init
</UL>

<P><STRONG><a name="[f6]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_init
</UL>

<P><STRONG><a name="[2c2]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[28f]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[2c3]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[2c4]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[f5]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_peer_address_clear
</UL>

<P><STRONG><a name="[56]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_char_add
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rx_char_add
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_start
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_init
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;advertising_IDLE_Init
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;advertising_init
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_advertising_init
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conn_params_init
</UL>

<P><STRONG><a name="[2c5]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[290]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[4d]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_params_init
</UL>

<P><STRONG><a name="[28e]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lmul
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[2c6]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[28d]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[2c7]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[40]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[2c8]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[2c9]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl.o(.text), UNUSED)

<P><STRONG><a name="[2ca]"></a>__decompress0</STRONG> (Thumb, 58 bytes, Stack size unknown bytes, __dczerorl.o(.text), UNUSED)

<P><STRONG><a name="[cc]"></a>__ARM_common_switch8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, main.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_speak
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time_to_Unix
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_FlashWord_Num
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_PS_Print_Run
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PS_Print_Run
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Unix_Time_to_Time
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_Run
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSM12MC_Sen_Read
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_PS_Lmage_Run
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PS_Input_Order_Run
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A71_TX_Dat
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Need_Of_RX_Dat
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A71_RF_RX_MODE
</UL>

<P><STRONG><a name="[2cb]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[2cc]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[2cd]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[8b]"></a>nrf_gpio_cfg_input</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = nrf_gpio_cfg_input
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pass_Word_Run
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_event_handler_O
</UL>

<P><STRONG><a name="[4c]"></a>gap_params_init</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gap_params_init
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ref_BLE_Adv
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_event_handler_O
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Key_Run
</UL>

<P><STRONG><a name="[21]"></a>nus_data_handler</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 892<LI>Call Chain = nus_data_handler &rArr; Data_Input &rArr; BLE_DAT_SW &rArr; BLE_Dat_Select &rArr; Add_Information_Run &rArr; Add_Flash_PassWord &rArr; Ev_Cat_Dat &rArr; SpiFlash_Read_Data &rArr; SpiFlash_Write_CMD &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Input
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[52]"></a>services_init</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = services_init &rArr; ble_nus_init &rArr; tx_char_add
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_nus_init
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[22]"></a>on_conn_params_evt</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = on_conn_params_evt
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[23]"></a>conn_params_error_handler</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = conn_params_error_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[55]"></a>conn_params_init</STRONG> (Thumb, 84 bytes, Stack size 40 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = conn_params_init &rArr; ble_conn_params_init &rArr; app_timer_create
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_init
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[58]"></a>sleep_mode_enter</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = sleep_mode_enter &rArr; bsp_btn_ble_sleep_mode_prepare &rArr; bsp_wakeup_buttons_set
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_indication_set
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_btn_ble_sleep_mode_prepare
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_adv_evt
</UL>

<P><STRONG><a name="[25]"></a>on_adv_evt</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = on_adv_evt &rArr; sleep_mode_enter &rArr; bsp_btn_ble_sleep_mode_prepare &rArr; bsp_wakeup_buttons_set
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_indication_set
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_mode_enter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[5b]"></a>on_ble_evt</STRONG> (Thumb, 242 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = on_ble_evt
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_indication_set
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_dispatch
</UL>

<P><STRONG><a name="[24]"></a>ble_evt_dispatch</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = ble_evt_dispatch &rArr; ble_advertising_on_ble_evt &rArr; ble_advertising_start &rArr; ble_advdata_set &rArr; adv_data_encode &rArr; uuid_list_encode &rArr; uuid_list_sized_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_btn_ble_on_ble_evt
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_nus_on_ble_evt
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_on_ble_evt
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_on_ble_evt
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_ble_evt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[60]"></a>ble_stack_init</STRONG> (Thumb, 178 bytes, Stack size 24 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ble_stack_init &rArr; softdevice_handler_init
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_handler_init
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_ble_evt_handler_set
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[76]"></a>AC_advertising_init</STRONG> (Thumb, 114 bytes, Stack size 168 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = AC_advertising_init &rArr; ble_advertising_init &rArr; ble_advdata_set &rArr; adv_data_encode &rArr; uuid_list_encode &rArr; uuid_list_sized_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_init
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ref_BLE_Adv
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_event_handler_O
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Key_Run
</UL>

<P><STRONG><a name="[90]"></a>advertising_init</STRONG> (Thumb, 114 bytes, Stack size 168 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = advertising_init &rArr; ble_advertising_init &rArr; ble_advdata_set &rArr; adv_data_encode &rArr; uuid_list_encode &rArr; uuid_list_sized_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_init
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ref_BLE_Adv
</UL>

<P><STRONG><a name="[9f]"></a>buttons_leds_init</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = buttons_leds_init &rArr; bsp_init &rArr; app_button_init &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_init
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_btn_ble_init
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a2]"></a>power_manage</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = power_manage
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[27]"></a>my_timer_handler</STRONG> (Thumb, 466 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 372<LI>Call Chain = my_timer_handler &rArr; Ev_Cat_Dat &rArr; SpiFlash_Read_Data &rArr; SpiFlash_Write_CMD &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311Reset
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;irqClearAll
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkCardInit
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSM12_Init
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Flash_Sleep
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Flash_Init
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_PowerDown
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ev_Cat_Dat
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKY1311_RC_VALUE
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_Conner
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[28]"></a>Read_Key</STRONG> (Thumb, 676 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 604<LI>Call Chain = Read_Key &rArr; Pass_Word_Run &rArr; Once_Act_PassWord_Verify &rArr; Act_PassWord_Save &rArr; More_Act_PassWord_Save &rArr; Ev_Cat_Dat &rArr; SpiFlash_Read_Data &rArr; SpiFlash_Write_CMD &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311Reset
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpr121_init
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;irqClearAll
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_speak
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkCardInit
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSM12_read_key_Num
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSM12_Init
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSM12_Exit_Sleep_Mode
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Flash_Sleep
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Flash_Init
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Manual_Add_Card_ACK
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bsp_Set
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pass_Word_Run
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ref_BLE_Adv
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_read
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[68]"></a>nrf_gpio_pin_set</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_SKY1311_IRQ
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311_run
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311_Init
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pass_Word_Run
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_a_key
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_1_Handler
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_event_handler_O
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Key_Run
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKY1311_RC_VALUE
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Key
</UL>

<P><STRONG><a name="[6b]"></a>nrf_gpio_pin_clear</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_SKY1311_IRQ
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pass_Word_Run
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_a_key
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_1_Handler
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_event_handler_O
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_LED_Cheak_RC_Value
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKY1311_RC_VALUE
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Key
</UL>

<P><STRONG><a name="[7e]"></a>nrf_gpio_pin_read</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FD_Key_Run
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311_run
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311_Read
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311_In_Read
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pass_Word_Run
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_a_key
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_1_Handler
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_event_handler_O
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Key
</UL>

<P><STRONG><a name="[34]"></a>bsp_button_event_handler</STRONG> (Thumb, 12 bytes, Stack size 16 bytes, bsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 532<LI>Call Chain = bsp_button_event_handler &rArr; bsp_event_handler_O &rArr; Data_Card_Run &rArr; Ev_Cat_Dat &rArr; SpiFlash_Read_Data &rArr; SpiFlash_Write_CMD &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_event_handler_O
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_timer_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp.o(.constdata)
</UL>
<P><STRONG><a name="[2b]"></a>button_timer_handler</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, bsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 540<LI>Call Chain = button_timer_handler &rArr; bsp_button_event_handler &rArr; bsp_event_handler_O &rArr; Data_Card_Run &rArr; Ev_Cat_Dat &rArr; SpiFlash_Read_Data &rArr; SpiFlash_Write_CMD &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_button_event_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp.o(.text)
</UL>
<P><STRONG><a name="[d9]"></a>connection_buttons_configure</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, bsp_btn_ble.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = connection_buttons_configure &rArr; bsp_event_to_button_action_assign
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_event_to_button_action_assign
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_btn_ble_on_ble_evt
</UL>

<P><STRONG><a name="[da]"></a>advertising_buttons_configure</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, bsp_btn_ble.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = advertising_buttons_configure &rArr; bsp_event_to_button_action_assign
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_event_to_button_action_assign
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_btn_ble_on_ble_evt
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_btn_ble_init
</UL>

<P><STRONG><a name="[db]"></a>startup_event_extract</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, bsp_btn_ble.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = startup_event_extract &rArr; bsp_button_is_pressed
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_button_is_pressed
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_btn_ble_init
</UL>

<P><STRONG><a name="[df]"></a>is_disabled_in_debug_needed</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, system_nrf51.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[de]"></a>is_manual_peripheral_setup_needed</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, system_nrf51.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[ec]"></a>tk_value_encode</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, ble_advdata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = tk_value_encode
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_encode
</UL>

<P><STRONG><a name="[ed]"></a>le_role_encode</STRONG> (Thumb, 106 bytes, Stack size 12 bytes, ble_advdata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = le_role_encode
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_encode
</UL>

<P><STRONG><a name="[e0]"></a>ble_device_addr_encode</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, ble_advdata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ble_device_addr_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_encode
</UL>

<P><STRONG><a name="[f0]"></a>name_encode</STRONG> (Thumb, 194 bytes, Stack size 48 bytes, ble_advdata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = name_encode
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_encode
</UL>

<P><STRONG><a name="[e2]"></a>appearance_encode</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, ble_advdata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = appearance_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_encode
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_encode
</UL>

<P><STRONG><a name="[ee]"></a>flags_encode</STRONG> (Thumb, 54 bytes, Stack size 12 bytes, ble_advdata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = flags_encode
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_encode
</UL>

<P><STRONG><a name="[eb]"></a>sec_mgr_oob_flags_encode</STRONG> (Thumb, 54 bytes, Stack size 12 bytes, ble_advdata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = sec_mgr_oob_flags_encode
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_encode
</UL>

<P><STRONG><a name="[ef]"></a>tx_power_level_encode</STRONG> (Thumb, 54 bytes, Stack size 12 bytes, ble_advdata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = tx_power_level_encode
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_encode
</UL>

<P><STRONG><a name="[e5]"></a>uuid_list_sized_encode</STRONG> (Thumb, 216 bytes, Stack size 64 bytes, ble_advdata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = uuid_list_sized_encode
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uuid_list_encode
</UL>

<P><STRONG><a name="[e4]"></a>uuid_list_encode</STRONG> (Thumb, 68 bytes, Stack size 48 bytes, ble_advdata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = uuid_list_encode &rArr; uuid_list_sized_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uuid_list_sized_encode
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_encode
</UL>

<P><STRONG><a name="[e7]"></a>conn_int_check</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, ble_advdata.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conn_int_encode
</UL>

<P><STRONG><a name="[e6]"></a>conn_int_encode</STRONG> (Thumb, 102 bytes, Stack size 40 bytes, ble_advdata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = conn_int_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_encode
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conn_int_check
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_encode
</UL>

<P><STRONG><a name="[e8]"></a>manuf_specific_data_encode</STRONG> (Thumb, 120 bytes, Stack size 40 bytes, ble_advdata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = manuf_specific_data_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_encode
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_encode
</UL>

<P><STRONG><a name="[e9]"></a>service_data_encode</STRONG> (Thumb, 150 bytes, Stack size 32 bytes, ble_advdata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = service_data_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_encode
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_encode
</UL>

<P><STRONG><a name="[f2]"></a>advdata_check</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ble_advdata.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advdata_set
</UL>

<P><STRONG><a name="[f3]"></a>srdata_check</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ble_advdata.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advdata_set
</UL>

<P><STRONG><a name="[e3]"></a>uint16_encode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ble_advdata.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;service_data_encode
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;manuf_specific_data_encode
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conn_int_encode
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appearance_encode
</UL>

<P><STRONG><a name="[f9]"></a>whitelist_has_entries</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, ble_advertising.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_start
</UL>

<P><STRONG><a name="[f4]"></a>ble_advertising_peer_address_clear</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ble_advertising.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ble_advertising_peer_address_clear
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_start
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_init
</UL>

<P><STRONG><a name="[f8]"></a>peer_address_exists</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ble_advertising.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_start
</UL>

<P><STRONG><a name="[fe]"></a>is_conn_params_ok</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, ble_conn_params.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_change_conn_params
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conn_params_negotiation
</UL>

<P><STRONG><a name="[2e]"></a>update_timeout_handler</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, ble_conn_params.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = update_timeout_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_conn_params.o(.text)
</UL>
<P><STRONG><a name="[fd]"></a>conn_params_negotiation</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, ble_conn_params.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = conn_params_negotiation &rArr; app_timer_start &rArr; timer_start_op_schedule &rArr; user_op_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_conn_params_ok
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_conn_params_update
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_write
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_connect
</UL>

<P><STRONG><a name="[ff]"></a>on_connect</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, ble_conn_params.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = on_connect &rArr; conn_params_negotiation &rArr; app_timer_start &rArr; timer_start_op_schedule &rArr; user_op_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conn_params_negotiation
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_on_ble_evt
</UL>

<P><STRONG><a name="[100]"></a>on_disconnect</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, ble_conn_params.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = on_disconnect &rArr; app_timer_stop &rArr; timer_stop_op_schedule &rArr; user_op_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_on_ble_evt
</UL>

<P><STRONG><a name="[101]"></a>on_write</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, ble_conn_params.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = on_write &rArr; conn_params_negotiation &rArr; app_timer_start &rArr; timer_start_op_schedule &rArr; user_op_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conn_params_negotiation
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_on_ble_evt
</UL>

<P><STRONG><a name="[102]"></a>on_conn_params_update</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, ble_conn_params.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = on_conn_params_update &rArr; conn_params_negotiation &rArr; app_timer_start &rArr; timer_start_op_schedule &rArr; user_op_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conn_params_negotiation
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_on_ble_evt
</UL>

<P><STRONG><a name="[106]"></a>on_connect</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ble_nus.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_nus_on_ble_evt
</UL>

<P><STRONG><a name="[107]"></a>on_disconnect</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ble_nus.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_nus_on_ble_evt
</UL>

<P><STRONG><a name="[108]"></a>on_write</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, ble_nus.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = on_write
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_nus_on_ble_evt
</UL>

<P><STRONG><a name="[104]"></a>rx_char_add</STRONG> (Thumb, 292 bytes, Stack size 72 bytes, ble_nus.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = rx_char_add
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_nus_init
</UL>

<P><STRONG><a name="[105]"></a>tx_char_add</STRONG> (Thumb, 222 bytes, Stack size 72 bytes, ble_nus.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = tx_char_add
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_nus_init
</UL>

<P><STRONG><a name="[10a]"></a>NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, nrf_drv_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_common_irq_enable
</UL>

<P><STRONG><a name="[11e]"></a>nrf_gpio_cfg</STRONG> (Thumb, 38 bytes, Stack size 20 bytes, nrf_drv_gpiote.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = nrf_gpio_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_init
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_out_init
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_default
</UL>

<P><STRONG><a name="[111]"></a>nrf_gpio_cfg_sense_set</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, nrf_drv_gpiote.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nrf_gpio_cfg_sense_set
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOTE_IRQHandler
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_event_enable
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_event_disable
</UL>

<P><STRONG><a name="[112]"></a>pin_in_use_by_te</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, nrf_drv_gpiote.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_event_enable
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_out_uninit
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_uninit
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_event_disable
</UL>

<P><STRONG><a name="[11b]"></a>channel_port_alloc</STRONG> (Thumb, 118 bytes, Stack size 52 bytes, nrf_drv_gpiote.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = channel_port_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_init
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_out_init
</UL>

<P><STRONG><a name="[10d]"></a>channel_free</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, nrf_drv_gpiote.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_out_uninit
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_uninit
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_init
</UL>

<P><STRONG><a name="[128]"></a>nrf_gpiote_event_addr_get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, nrf_drv_gpiote.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_event_addr_get
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpiote_event_clear
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpiote_event_is_set
</UL>

<P><STRONG><a name="[129]"></a>nrf_gpiote_event_is_set</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, nrf_drv_gpiote.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nrf_gpiote_event_is_set
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpiote_event_addr_get
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOTE_IRQHandler
</UL>

<P><STRONG><a name="[125]"></a>nrf_gpiote_event_clear</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, nrf_drv_gpiote.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nrf_gpiote_event_clear
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpiote_event_addr_get
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOTE_IRQHandler
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_event_enable
</UL>

<P><STRONG><a name="[10e]"></a>nrf_gpiote_int_enable</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, nrf_drv_gpiote.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_event_enable
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_init
</UL>

<P><STRONG><a name="[115]"></a>nrf_gpiote_te_default</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, nrf_drv_gpiote.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_out_uninit
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_uninit
</UL>

<P><STRONG><a name="[116]"></a>nrf_gpio_cfg_default</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, nrf_drv_gpiote.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_out_uninit
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_uninit
</UL>

<P><STRONG><a name="[11c]"></a>nrf_gpio_pin_set</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, nrf_drv_gpiote.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_out_set
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_out_init
</UL>

<P><STRONG><a name="[11d]"></a>nrf_gpio_pin_clear</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, nrf_drv_gpiote.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_out_clear
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_out_init
</UL>

<P><STRONG><a name="[110]"></a>pin_in_use_by_port</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, nrf_drv_gpiote.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_event_enable
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_event_disable
</UL>

<P><STRONG><a name="[119]"></a>pin_in_use_by_gpiote</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, nrf_drv_gpiote.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_init
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_uninit
</UL>

<P><STRONG><a name="[10c]"></a>pin_in_use_clear</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, nrf_drv_gpiote.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_out_uninit
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_uninit
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_init
</UL>

<P><STRONG><a name="[113]"></a>channel_port_get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, nrf_drv_gpiote.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOTE_IRQHandler
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_event_addr_get
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_event_enable
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_out_task_trigger
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_out_task_addr_get
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_out_uninit
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_uninit
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_event_disable
</UL>

<P><STRONG><a name="[126]"></a>channel_handler_get</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, nrf_drv_gpiote.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOTE_IRQHandler
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_event_enable
</UL>

<P><STRONG><a name="[147]"></a>nrf_gpio_cfg</STRONG> (Thumb, 38 bytes, Stack size 20 bytes, nrf_drv_uart.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_default
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_input
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_output
</UL>

<P><STRONG><a name="[130]"></a>tx_byte</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, nrf_drv_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tx_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_event_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_uart_tx
</UL>

<P><STRONG><a name="[135]"></a>rx_byte</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, nrf_drv_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rx_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_event_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_uart_rx
</UL>

<P><STRONG><a name="[140]"></a>rx_done_event</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, nrf_drv_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = rx_done_event
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
</UL>

<P><STRONG><a name="[13d]"></a>tx_done_event</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, nrf_drv_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = tx_done_event
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_uart_tx_abort
</UL>

<P><STRONG><a name="[131]"></a>nrf_uart_event_clear</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, nrf_drv_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_uart_errorsrc_get
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rx_enable
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rx_byte
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_byte
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_uart_tx
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_uart_rx
</UL>

<P><STRONG><a name="[134]"></a>nrf_uart_event_check</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, nrf_drv_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_uart_tx
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_uart_rx
</UL>

<P><STRONG><a name="[12c]"></a>nrf_uart_int_enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, nrf_drv_uart.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_uart_rx
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_uart_init
</UL>

<P><STRONG><a name="[13f]"></a>nrf_uart_int_enable_check</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, nrf_drv_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
</UL>

<P><STRONG><a name="[12e]"></a>nrf_uart_int_disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, nrf_drv_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_uart_rx_abort
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_uart_uninit
</UL>

<P><STRONG><a name="[13b]"></a>nrf_uart_errorsrc_get_and_clear</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, nrf_drv_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_uart_errorsrc_get
</UL>

<P><STRONG><a name="[133]"></a>nrf_uart_task_trigger</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, nrf_drv_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_uart_rx_abort
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_uart_tx_abort
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_uart_rx_disable
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rx_enable
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_uart_tx
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_uart_rx
</UL>

<P><STRONG><a name="[12b]"></a>apply_config</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, nrf_drv_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_input
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_output
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_hwfc_pins_set
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_txrx_pins_set
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_uart_init
</UL>

<P><STRONG><a name="[12f]"></a>pins_to_default</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, nrf_drv_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_default
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_hwfc_pins_set
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_txrx_pins_set
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_uart_uninit
</UL>

<P><STRONG><a name="[137]"></a>rx_enable</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, nrf_drv_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_task_trigger
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_event_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_uart_rx_enable
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_uart_rx
</UL>

<P><STRONG><a name="[144]"></a>nrf_uart_txrx_pins_set</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, nrf_drv_uart.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pins_to_default
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apply_config
</UL>

<P><STRONG><a name="[145]"></a>nrf_uart_hwfc_pins_set</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, nrf_drv_uart.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pins_to_default
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apply_config
</UL>

<P><STRONG><a name="[141]"></a>nrf_gpio_cfg_output</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, nrf_drv_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apply_config
</UL>

<P><STRONG><a name="[143]"></a>nrf_gpio_cfg_input</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, nrf_drv_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apply_config
</UL>

<P><STRONG><a name="[146]"></a>nrf_gpio_cfg_default</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, nrf_drv_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pins_to_default
</UL>

<P><STRONG><a name="[142]"></a>nrf_gpio_pin_set</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, nrf_drv_uart.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apply_config
</UL>

<P><STRONG><a name="[148]"></a>pstorage_flash_page_end</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, pstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = pstorage_flash_page_end &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_flash_page_size
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_register
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_init
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;state_restore_head_entry_run
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;state_restore_tail_entry_run
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;state_write_data_swap_entry_run
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;state_swap_erase_entry_run
</UL>

<P><STRONG><a name="[14b]"></a>cmd_queue_element_init</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, pstorage.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_queue_init
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_queue_element_consume
</UL>

<P><STRONG><a name="[14a]"></a>command_queue_element_consume</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, pstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = command_queue_element_consume
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_queue_element_init
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_end_procedure_run
</UL>

<P><STRONG><a name="[14d]"></a>app_notify</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, pstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_notify
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_end_procedure_run
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_notify_error_state_transit
</UL>

<P><STRONG><a name="[14c]"></a>app_notify_error_state_transit</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, pstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = app_notify_error_state_transit &rArr; sm_state_change &rArr; state_entry_action_run &rArr; state_idle_entry_run &rArr; cmd_queue_dequeue &rArr; cmd_process &rArr; update_operation_execute &rArr; clear_operation_execute &rArr;  sm_state_change (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_state_change
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_notify
</UL>
<BR>[Called By]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_operation_failure_run
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_api_err_code_process
</UL>

<P><STRONG><a name="[14f]"></a>flash_api_err_code_process</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, pstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = flash_api_err_code_process &rArr; app_notify_error_state_transit &rArr; sm_state_change &rArr; state_entry_action_run &rArr; state_idle_entry_run &rArr; cmd_queue_dequeue &rArr; cmd_process &rArr; update_operation_execute &rArr; clear_operation_execute &rArr;  sm_state_change (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_notify_error_state_transit
</UL>
<BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_page_erase
</UL>

<P><STRONG><a name="[150]"></a>flash_page_erase</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, pstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = flash_page_erase &rArr; flash_api_err_code_process &rArr; app_notify_error_state_transit &rArr; sm_state_change &rArr; state_entry_action_run &rArr; state_idle_entry_run &rArr; cmd_queue_dequeue &rArr; cmd_process &rArr; update_operation_execute &rArr; clear_operation_execute &rArr;  sm_state_change (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_api_err_code_process
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;state_erase_data_page_entry_run
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;state_swap_erase_entry_run
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;state_data_erase_entry_run
</UL>

<P><STRONG><a name="[151]"></a>state_data_erase_entry_run</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, pstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + In Cycle
<LI>Call Chain = state_data_erase_entry_run &rArr;  flash_page_erase (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_page_erase
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;state_entry_action_run
</UL>

<P><STRONG><a name="[153]"></a>swap_sub_state_entry_action_run</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, pstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = swap_sub_state_entry_action_run
</UL>
<BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;swap_sub_state_state_change
</UL>

<P><STRONG><a name="[152]"></a>swap_sub_state_state_change</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, pstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = swap_sub_state_state_change &rArr; swap_sub_state_entry_action_run
</UL>
<BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;swap_sub_state_entry_action_run
</UL>
<BR>[Called By]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_operation_failure_run
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;swap_erase_state_run
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_to_swap_write_state_run
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_page_erase_state_run
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_restore_state_run
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;swap_sub_state_err_busy_process
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;state_data_erase_swap_entry_run
</UL>

<P><STRONG><a name="[154]"></a>state_data_erase_swap_entry_run</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, pstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = state_data_erase_swap_entry_run &rArr; swap_sub_state_state_change &rArr; swap_sub_state_entry_action_run
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_flash_page_size
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;swap_sub_state_state_change
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;state_entry_action_run
</UL>

<P><STRONG><a name="[155]"></a>flash_write</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, pstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + In Cycle
<LI>Call Chain = flash_write &rArr;  flash_api_err_code_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_api_err_code_process
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;state_restore_head_entry_run
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;state_restore_tail_entry_run
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;state_write_data_swap_entry_run
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;store_cmd_flash_write_execute
</UL>

<P><STRONG><a name="[156]"></a>store_cmd_flash_write_execute</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, pstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = store_cmd_flash_write_execute &rArr; flash_write &rArr;  flash_api_err_code_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_flash_page_size
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
</UL>
<BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;store_sub_state_sm_run
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;state_store_entry_run
</UL>

<P><STRONG><a name="[157]"></a>state_store_entry_run</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, pstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = state_store_entry_run &rArr; store_cmd_flash_write_execute &rArr; flash_write &rArr;  flash_api_err_code_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;store_cmd_flash_write_execute
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;state_entry_action_run
</UL>

<P><STRONG><a name="[158]"></a>tail_word_size_calculate</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, pstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = tail_word_size_calculate &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_flash_page_size
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_operation_execute
</UL>

<P><STRONG><a name="[15a]"></a>clear_operation_execute</STRONG> (Thumb, 254 bytes, Stack size 48 bytes, pstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108 + In Cycle
<LI>Call Chain = clear_operation_execute &rArr;  sm_state_change (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_flash_page_size
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_state_change
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tail_word_size_calculate
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_process
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_operation_execute
</UL>

<P><STRONG><a name="[15b]"></a>update_operation_execute</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, pstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = update_operation_execute &rArr; clear_operation_execute &rArr;  sm_state_change (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_operation_execute
</UL>
<BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_process
</UL>

<P><STRONG><a name="[15c]"></a>store_operation_execute</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, pstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + In Cycle
<LI>Call Chain = store_operation_execute &rArr;  sm_state_change (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_state_change
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_post_processing_run
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_process
</UL>

<P><STRONG><a name="[15d]"></a>cmd_process</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, pstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = cmd_process &rArr; update_operation_execute &rArr; clear_operation_execute &rArr;  sm_state_change (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;store_operation_execute
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_operation_execute
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_operation_execute
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_queue_enqueue
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_queue_dequeue
</UL>

<P><STRONG><a name="[15e]"></a>cmd_queue_dequeue</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, pstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = cmd_queue_dequeue &rArr; cmd_process &rArr; update_operation_execute &rArr; clear_operation_execute &rArr;  sm_state_change (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_process
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;state_idle_entry_run
</UL>

<P><STRONG><a name="[15f]"></a>state_idle_entry_run</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, pstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = state_idle_entry_run &rArr; cmd_queue_dequeue &rArr; cmd_process &rArr; update_operation_execute &rArr; clear_operation_execute &rArr;  sm_state_change (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_queue_dequeue
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;state_entry_action_run
</UL>

<P><STRONG><a name="[160]"></a>state_entry_action_run</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, pstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = state_entry_action_run &rArr; state_idle_entry_run &rArr; cmd_queue_dequeue &rArr; cmd_process &rArr; update_operation_execute &rArr; clear_operation_execute &rArr;  sm_state_change (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;state_idle_entry_run
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;state_store_entry_run
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;state_data_erase_swap_entry_run
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;state_data_erase_entry_run
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_state_change
</UL>

<P><STRONG><a name="[14e]"></a>sm_state_change</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, pstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = sm_state_change &rArr; state_entry_action_run &rArr; state_idle_entry_run &rArr; cmd_queue_dequeue &rArr; cmd_process &rArr; update_operation_execute &rArr; clear_operation_execute &rArr;  sm_state_change (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;state_entry_action_run
</UL>
<BR>[Called By]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_operation_failure_run
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;erase_sub_state_sm_run
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_state_err_busy_process
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_end_procedure_run
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;store_operation_execute
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_operation_execute
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_notify_error_state_transit
</UL>

<P><STRONG><a name="[161]"></a>command_end_procedure_run</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, pstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = command_end_procedure_run &rArr; sm_state_change &rArr; state_entry_action_run &rArr; state_idle_entry_run &rArr; cmd_queue_dequeue &rArr; cmd_process &rArr; update_operation_execute &rArr; clear_operation_execute &rArr;  sm_state_change (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_state_change
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_notify
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_queue_element_consume
</UL>
<BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;store_sub_state_sm_run
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_post_processing_run
</UL>

<P><STRONG><a name="[35]"></a>state_swap_erase_entry_run</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, pstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = state_swap_erase_entry_run &rArr; flash_page_erase &rArr; flash_api_err_code_process &rArr; app_notify_error_state_transit &rArr; sm_state_change &rArr; state_entry_action_run &rArr; state_idle_entry_run &rArr; cmd_queue_dequeue &rArr; cmd_process &rArr; update_operation_execute &rArr; clear_operation_execute &rArr;  sm_state_change (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_flash_page_size
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_page_erase
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_flash_page_end
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pstorage.o(.constdata)
</UL>
<P><STRONG><a name="[36]"></a>state_write_data_swap_entry_run</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, pstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = state_write_data_swap_entry_run &rArr; pstorage_flash_page_end &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_flash_page_size
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_flash_page_end
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pstorage.o(.constdata)
</UL>
<P><STRONG><a name="[37]"></a>state_erase_data_page_entry_run</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, pstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = state_erase_data_page_entry_run &rArr; flash_page_erase &rArr; flash_api_err_code_process &rArr; app_notify_error_state_transit &rArr; sm_state_change &rArr; state_entry_action_run &rArr; state_idle_entry_run &rArr; cmd_queue_dequeue &rArr; cmd_process &rArr; update_operation_execute &rArr; clear_operation_execute &rArr;  sm_state_change (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_page_erase
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pstorage.o(.constdata)
</UL>
<P><STRONG><a name="[38]"></a>state_restore_tail_entry_run</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, pstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = state_restore_tail_entry_run &rArr; pstorage_flash_page_end &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_flash_page_size
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_flash_page_end
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pstorage.o(.constdata)
</UL>
<P><STRONG><a name="[39]"></a>state_restore_head_entry_run</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, pstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = state_restore_head_entry_run &rArr; pstorage_flash_page_end &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_flash_page_size
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_flash_page_end
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pstorage.o(.constdata)
</UL>
<P><STRONG><a name="[162]"></a>cmd_queue_init</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, pstorage.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_queue_element_init
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_init
</UL>

<P><STRONG><a name="[163]"></a>cmd_queue_enqueue</STRONG> (Thumb, 122 bytes, Stack size 40 bytes, pstorage.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_process
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_clear
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_update
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_store
</UL>

<P><STRONG><a name="[164]"></a>is_tail_data_page_swap_required</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, pstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = is_tail_data_page_swap_required &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_flash_page_size
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_restore_state_run
</UL>

<P><STRONG><a name="[165]"></a>clear_post_processing_run</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, pstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = clear_post_processing_run &rArr; command_end_procedure_run &rArr; sm_state_change &rArr; state_entry_action_run &rArr; state_idle_entry_run &rArr; cmd_queue_dequeue &rArr; cmd_process &rArr; update_operation_execute &rArr; clear_operation_execute &rArr;  sm_state_change (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_end_procedure_run
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;store_operation_execute
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;erase_sub_state_sm_run
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;swap_sub_sm_exit_action_run
</UL>

<P><STRONG><a name="[166]"></a>swap_sub_sm_exit_action_run</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, pstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = swap_sub_sm_exit_action_run &rArr; clear_post_processing_run &rArr; command_end_procedure_run &rArr; sm_state_change &rArr; state_entry_action_run &rArr; state_idle_entry_run &rArr; cmd_queue_dequeue &rArr; cmd_process &rArr; update_operation_execute &rArr; clear_operation_execute &rArr;  sm_state_change (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_post_processing_run
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_page_erase_state_run
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tail_restore_state_run
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_restore_state_run
</UL>

<P><STRONG><a name="[167]"></a>is_page_erase_required</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, pstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = is_page_erase_required &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_flash_page_size
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;erase_sub_state_sm_run
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_page_erase_state_run
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_restore_state_run
</UL>

<P><STRONG><a name="[168]"></a>swap_sub_state_err_busy_process</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, pstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = swap_sub_state_err_busy_process &rArr; swap_sub_state_state_change &rArr; swap_sub_state_entry_action_run
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;swap_sub_state_state_change
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;swap_erase_state_run
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_to_swap_write_state_run
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_page_erase_state_run
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tail_restore_state_run
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_restore_state_run
</UL>

<P><STRONG><a name="[3e]"></a>head_restore_state_run</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, pstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = head_restore_state_run &rArr; swap_sub_sm_exit_action_run &rArr; clear_post_processing_run &rArr; command_end_procedure_run &rArr; sm_state_change &rArr; state_entry_action_run &rArr; state_idle_entry_run &rArr; cmd_queue_dequeue &rArr; cmd_process &rArr; update_operation_execute &rArr; clear_operation_execute &rArr;  sm_state_change (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;swap_sub_state_err_busy_process
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_page_erase_required
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;swap_sub_sm_exit_action_run
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_tail_data_page_swap_required
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;swap_sub_state_state_change
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pstorage.o(.constdata)
</UL>
<P><STRONG><a name="[3d]"></a>tail_restore_state_run</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, pstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = tail_restore_state_run &rArr; swap_sub_sm_exit_action_run &rArr; clear_post_processing_run &rArr; command_end_procedure_run &rArr; sm_state_change &rArr; state_entry_action_run &rArr; state_idle_entry_run &rArr; cmd_queue_dequeue &rArr; cmd_process &rArr; update_operation_execute &rArr; clear_operation_execute &rArr;  sm_state_change (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;swap_sub_state_err_busy_process
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;swap_sub_sm_exit_action_run
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pstorage.o(.constdata)
</UL>
<P><STRONG><a name="[3c]"></a>data_page_erase_state_run</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, pstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = data_page_erase_state_run &rArr; swap_sub_sm_exit_action_run &rArr; clear_post_processing_run &rArr; command_end_procedure_run &rArr; sm_state_change &rArr; state_entry_action_run &rArr; state_idle_entry_run &rArr; cmd_queue_dequeue &rArr; cmd_process &rArr; update_operation_execute &rArr; clear_operation_execute &rArr;  sm_state_change (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;swap_sub_state_err_busy_process
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_page_erase_required
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;swap_sub_sm_exit_action_run
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;swap_sub_state_state_change
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pstorage.o(.constdata)
</UL>
<P><STRONG><a name="[3b]"></a>data_to_swap_write_state_run</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, pstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = data_to_swap_write_state_run &rArr; swap_sub_state_err_busy_process &rArr; swap_sub_state_state_change &rArr; swap_sub_state_entry_action_run
</UL>
<BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;swap_sub_state_err_busy_process
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;swap_sub_state_state_change
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pstorage.o(.constdata)
</UL>
<P><STRONG><a name="[3a]"></a>swap_erase_state_run</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, pstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = swap_erase_state_run &rArr; swap_sub_state_err_busy_process &rArr; swap_sub_state_state_change &rArr; swap_sub_state_entry_action_run
</UL>
<BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;swap_sub_state_err_busy_process
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;swap_sub_state_state_change
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pstorage.o(.constdata)
</UL>
<P><STRONG><a name="[16d]"></a>swap_sub_state_sm_run</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, pstorage.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_operation_success_run
</UL>

<P><STRONG><a name="[169]"></a>main_state_err_busy_process</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, pstorage.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_state_change
</UL>
<BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;store_sub_state_sm_run
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;erase_sub_state_sm_run
</UL>

<P><STRONG><a name="[16a]"></a>erase_sub_state_sm_run</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, pstorage.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_state_err_busy_process
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_page_erase_required
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_post_processing_run
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_state_change
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_operation_success_run
</UL>

<P><STRONG><a name="[16b]"></a>store_sub_state_sm_run</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, pstorage.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_state_err_busy_process
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_end_procedure_run
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;store_cmd_flash_write_execute
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_operation_success_run
</UL>

<P><STRONG><a name="[16c]"></a>flash_operation_success_run</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, pstorage.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;store_sub_state_sm_run
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;erase_sub_state_sm_run
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;swap_sub_state_sm_run
</UL>
<BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_sys_event_handler
</UL>

<P><STRONG><a name="[16e]"></a>flash_operation_failure_run</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, pstorage.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_state_change
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;swap_sub_state_state_change
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_notify_error_state_transit
</UL>
<BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_sys_event_handler
</UL>

<P><STRONG><a name="[149]"></a>pstorage_flash_page_size</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, pstorage.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_register
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_init
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_page_erase_required
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_tail_data_page_swap_required
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;state_restore_head_entry_run
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;state_restore_tail_entry_run
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;state_write_data_swap_entry_run
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;state_swap_erase_entry_run
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_operation_execute
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tail_word_size_calculate
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;store_cmd_flash_write_execute
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;state_data_erase_swap_entry_run
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_flash_page_end
</UL>

<P><STRONG><a name="[173]"></a>is_word_aligned</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, pstorage.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_clear
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_load
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_update
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_store
</UL>

<P><STRONG><a name="[30]"></a>detection_delay_timeout_handler</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, app_button.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = detection_delay_timeout_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_is_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_button.o(.text)
</UL>
<P><STRONG><a name="[2f]"></a>gpiote_event_handler</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, app_button.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = gpiote_event_handler &rArr; app_timer_start &rArr; timer_start_op_schedule &rArr; user_op_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_is_set
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_button.o(.text)
</UL>
<P><STRONG><a name="[17b]"></a>NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc1_init
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_init
</UL>

<P><STRONG><a name="[17a]"></a>rtc1_init</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rtc1_init &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_init
</UL>

<P><STRONG><a name="[17c]"></a>rtc1_start</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rtc1_start
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___11_app_timer_c_cd27f9c3__nrf_delay_us
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_ClearPendingIRQ
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compare_reg_update
</UL>

<P><STRONG><a name="[17f]"></a>rtc1_stop</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rtc1_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___11_app_timer_c_cd27f9c3__nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compare_reg_update
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_init
</UL>

<P><STRONG><a name="[18a]"></a>timer_list_insert</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = timer_list_insert
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_insertions_handler
</UL>

<P><STRONG><a name="[188]"></a>timer_list_remove</STRONG> (Thumb, 96 bytes, Stack size 12 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = timer_list_remove
</UL>
<BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_deletions_handler
</UL>

<P><STRONG><a name="[180]"></a>timer_timeouts_check_sched</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = timer_timeouts_check_sched
</UL>
<BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPendingIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compare_reg_update
</UL>

<P><STRONG><a name="[182]"></a>timer_list_handler_sched</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = timer_list_handler_sched
</UL>
<BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPendingIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_stop_all_op_schedule
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_stop_op_schedule
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_start_op_schedule
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_timeouts_check
</UL>

<P><STRONG><a name="[183]"></a>timeout_handler_exec</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = timeout_handler_exec
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_timeouts_check
</UL>

<P><STRONG><a name="[184]"></a>timer_timeouts_check</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = timer_timeouts_check &rArr; timeout_handler_exec
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ticks_diff_get
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc1_counter_get
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timeout_handler_exec
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_list_handler_sched
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC1_IRQHandler
</UL>

<P><STRONG><a name="[18e]"></a>elapsed_ticks_acquire</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, app_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_list_handler
</UL>

<P><STRONG><a name="[187]"></a>list_deletions_handler</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = list_deletions_handler &rArr; timer_list_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_list_remove
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_list_handler
</UL>

<P><STRONG><a name="[18f]"></a>expired_timers_handler</STRONG> (Thumb, 86 bytes, Stack size 20 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = expired_timers_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_list_handler
</UL>

<P><STRONG><a name="[189]"></a>list_insertions_handler</STRONG> (Thumb, 312 bytes, Stack size 32 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = list_insertions_handler &rArr; timer_list_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ticks_diff_get
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_list_insert
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_list_handler
</UL>

<P><STRONG><a name="[18b]"></a>compare_reg_update</STRONG> (Thumb, 126 bytes, Stack size 32 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = compare_reg_update &rArr; timer_timeouts_check_sched
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___11_app_timer_c_cd27f9c3__nrf_delay_us
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc1_compare0_set
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ticks_diff_get
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc1_counter_get
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_timeouts_check_sched
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc1_stop
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc1_start
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_list_handler
</UL>

<P><STRONG><a name="[18d]"></a>timer_list_handler</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = timer_list_handler &rArr; compare_reg_update &rArr; timer_timeouts_check_sched
</UL>
<BR>[Calls]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compare_reg_update
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_insertions_handler
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expired_timers_handler
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_deletions_handler
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;elapsed_ticks_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI0_IRQHandler
</UL>

<P><STRONG><a name="[192]"></a>user_op_enque</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_stop_all_op_schedule
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_stop_op_schedule
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_start_op_schedule
</UL>

<P><STRONG><a name="[191]"></a>user_op_alloc</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = user_op_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_stop_all_op_schedule
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_stop_op_schedule
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_start_op_schedule
</UL>

<P><STRONG><a name="[190]"></a>timer_start_op_schedule</STRONG> (Thumb, 82 bytes, Stack size 40 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = timer_start_op_schedule &rArr; user_op_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc1_counter_get
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_op_alloc
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_op_enque
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_list_handler_sched
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
</UL>

<P><STRONG><a name="[193]"></a>timer_stop_op_schedule</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = timer_stop_op_schedule &rArr; user_op_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_op_alloc
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_op_enque
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_list_handler_sched
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
</UL>

<P><STRONG><a name="[194]"></a>timer_stop_all_op_schedule</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, app_timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_op_alloc
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_op_enque
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_list_handler_sched
</UL>
<BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop_all
</UL>

<P><STRONG><a name="[195]"></a>user_id_get</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = user_id_get &rArr; current_int_priority_get
</UL>
<BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;current_int_priority_get
</UL>
<BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop_all
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
</UL>

<P><STRONG><a name="[17e]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, app_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc1_start
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_init
</UL>

<P><STRONG><a name="[181]"></a>NVIC_SetPendingIRQ</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, app_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_list_handler_sched
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_timeouts_check_sched
</UL>

<P><STRONG><a name="[17d]"></a>NVIC_ClearPendingIRQ</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc1_start
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_init
</UL>

<P><STRONG><a name="[196]"></a>current_int_priority_get</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = current_int_priority_get
</UL>
<BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_id_get
</UL>

<P><STRONG><a name="[185]"></a>rtc1_counter_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_cnt_get
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_start_op_schedule
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compare_reg_update
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_timeouts_check
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_init
</UL>

<P><STRONG><a name="[186]"></a>ticks_diff_get</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, app_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_cnt_diff_compute
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compare_reg_update
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_insertions_handler
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_timeouts_check
</UL>

<P><STRONG><a name="[18c]"></a>rtc1_compare0_set</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compare_reg_update
</UL>

<P><STRONG><a name="[1b4]"></a>nrf_gpio_cfg</STRONG> (Thumb, 38 bytes, Stack size 20 bytes, w25q32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = nrf_gpio_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_input
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_output
</UL>

<P><STRONG><a name="[19b]"></a>spi_master_init</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, w25q32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = spi_master_init &rArr; nrf_gpio_cfg_input &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_input
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_output
</UL>
<BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Start
</UL>

<P><STRONG><a name="[1a1]"></a>SpiFlash_Write_CMD</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, w25q32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SpiFlash_Write_CMD &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_WriteOneByte
</UL>
<BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read_Data
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read_Sector_Data
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write_Data
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Erase_Block
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write_Page
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Erase_Sector
</UL>

<P><STRONG><a name="[1a5]"></a>SpiFlash_Wait_Busy</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, w25q32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SpiFlash_Wait_Busy &rArr; nrf_delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write_Data
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Erase_Block
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write_Page
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Erase_Sector
</UL>

<P><STRONG><a name="[1a7]"></a>SpiFlash_Write_Enable</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, w25q32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SpiFlash_Write_Enable &rArr; SpiFlash_WriteOneByte &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_WriteOneByte
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
</UL>
<BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write_Data
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Erase_Block
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write_Page
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Erase_Sector
</UL>

<P><STRONG><a name="[19d]"></a>nrf_gpio_cfg_output</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, w25q32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = nrf_gpio_cfg_output &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Start
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_init
</UL>

<P><STRONG><a name="[19c]"></a>nrf_gpio_cfg_input</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, w25q32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = nrf_gpio_cfg_input &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Start
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_init
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Flash_Sleep
</UL>

<P><STRONG><a name="[1a4]"></a>nrf_gpio_pin_set</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, w25q32.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read_Data
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read_Sector_Data
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write_Data
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Erase_Block
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write_Page
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Reset
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_EnableReset
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_PowerUp
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_ReadSR
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write_Enable
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Flash_Sleep
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Erase_Sector
</UL>

<P><STRONG><a name="[1a3]"></a>nrf_gpio_pin_clear</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, w25q32.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read_Data
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read_Sector_Data
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write_Data
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Erase_Block
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write_Page
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Reset
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_EnableReset
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_PowerUp
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_ReadSR
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write_Enable
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Flash_Sleep
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Erase_Sector
</UL>

<P><STRONG><a name="[1c8]"></a>nrf_gpio_cfg</STRONG> (Thumb, 38 bytes, Stack size 20 bytes, bl5372.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = nrf_gpio_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_default
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_output
</UL>

<P><STRONG><a name="[1b6]"></a>nrf_gpio_cfg_output</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, bl5372.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = nrf_gpio_cfg_output &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_I2C_GPIO_init
</UL>

<P><STRONG><a name="[1b9]"></a>nrf_gpio_cfg_default</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, bl5372.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = nrf_gpio_cfg_default &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_I2C_GPIO_SLEEP
</UL>

<P><STRONG><a name="[1b7]"></a>nrf_gpio_pin_set</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, bl5372.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLI2C_READ_BYTE
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_I2C_WRITE_BYTE
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_I2C_SEND_ACK
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_I2C_WAIT_ACK
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLI2C_STOP
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLI2C_START
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_I2C_GPIO_SLEEP
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_I2C_GPIO_init
</UL>

<P><STRONG><a name="[1bc]"></a>nrf_gpio_pin_clear</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, bl5372.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLI2C_READ_BYTE
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_I2C_WRITE_BYTE
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_I2C_SEND_ACK
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_I2C_WAIT_ACK
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLI2C_STOP
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLI2C_START
</UL>

<P><STRONG><a name="[1bf]"></a>nrf_gpio_pin_read</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, bl5372.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLI2C_READ_BYTE
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_I2C_WAIT_ACK
</UL>

<P><STRONG><a name="[1e3]"></a>nrf_gpio_cfg_input</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, flash_rw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = nrf_gpio_cfg_input
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Per_Act_PassWord_Verify
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;More_Act_PassWord_Verify
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Act_PassWord_Verify
</UL>

<P><STRONG><a name="[1e4]"></a>nrf_gpio_pin_read</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, flash_rw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Per_Act_PassWord_Verify
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;More_Act_PassWord_Verify
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Act_PassWord_Verify
</UL>

<P><STRONG><a name="[1f6]"></a>nrf_gpio_cfg</STRONG> (Thumb, 38 bytes, Stack size 20 bytes, moto_run.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = nrf_gpio_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_default
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_output
</UL>

<P><STRONG><a name="[1f0]"></a>nrf_gpio_cfg_output</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, moto_run.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = nrf_gpio_cfg_output &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock_Mot_Init
</UL>

<P><STRONG><a name="[1f3]"></a>nrf_gpio_cfg_default</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, moto_run.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = nrf_gpio_cfg_default &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock_Mot_Default
</UL>

<P><STRONG><a name="[1f4]"></a>nrf_gpio_pin_set</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, moto_run.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock_Open
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock_Close
</UL>

<P><STRONG><a name="[1f2]"></a>nrf_gpio_pin_clear</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, moto_run.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock_Open
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock_Mot_Default
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock_Close
</UL>

<P><STRONG><a name="[1f7]"></a>nrf_gpio_cfg_output</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, speak.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = nrf_gpio_cfg_output
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auart_init
</UL>

<P><STRONG><a name="[32]"></a>LEDR_Close_Timer_Hander</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, speak.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LEDR_Close_Timer_Hander &rArr; app_timer_stop &rArr; timer_stop_op_schedule &rArr; user_op_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> speak.o(.text)
</UL>
<P><STRONG><a name="[1fb]"></a>nrf_gpio_pin_set</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, speak.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_speak
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_abus_byte
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_Cl
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_Di
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_Ok
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_Error
</UL>

<P><STRONG><a name="[1f8]"></a>nrf_gpio_pin_clear</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, speak.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auart_init
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_abus_byte
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_Run
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_Cl
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_Di
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_Ok
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_Error
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDR_Close_Timer_Hander
</UL>

<P><STRONG><a name="[203]"></a>nrf_gpio_cfg</STRONG> (Thumb, 38 bytes, Stack size 20 bytes, adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = nrf_gpio_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_F
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_output
</UL>

<P><STRONG><a name="[204]"></a>nrf_gpio_cfg_output</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = nrf_gpio_cfg_output &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_N
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
</UL>

<P><STRONG><a name="[20a]"></a>nrf_gpio_cfg</STRONG> (Thumb, 38 bytes, Stack size 20 bytes, key_run.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = nrf_gpio_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_input
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_output
</UL>

<P><STRONG><a name="[33]"></a>Moto_Timer_Hander</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, key_run.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Moto_Timer_Hander &rArr; app_timer_stop &rArr; timer_stop_op_schedule &rArr; user_op_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_read
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock_Close
</UL>
<BR>[Address Reference Count : 1]<UL><LI> key_run.o(.text)
</UL>
<P><STRONG><a name="[207]"></a>nrf_gpio_cfg_output</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, key_run.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = nrf_gpio_cfg_output &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_BR_Init
</UL>

<P><STRONG><a name="[208]"></a>nrf_gpio_cfg_input</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, key_run.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = nrf_gpio_cfg_input &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOCK_OPEN_Init
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Lock_Bon
</UL>

<P><STRONG><a name="[209]"></a>nrf_gpio_pin_read</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, key_run.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Moto_Timer_Hander
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Lock_Bon
</UL>

<P><STRONG><a name="[20e]"></a>nrf_gpio_pin_set</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ble_data.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_OpenLock_Run
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Normally_Open_Door_Run
</UL>

<P><STRONG><a name="[20f]"></a>nrf_gpio_pin_clear</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ble_data.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_OpenLock_Run
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Normally_Open_Door_Run
</UL>

<P><STRONG><a name="[228]"></a>nrf_gpio_cfg</STRONG> (Thumb, 38 bytes, Stack size 20 bytes, simple_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = nrf_gpio_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_input
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_output
</UL>

<P><STRONG><a name="[226]"></a>nrf_gpio_cfg_output</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, simple_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = nrf_gpio_cfg_output &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simple_uart_config
</UL>

<P><STRONG><a name="[227]"></a>nrf_gpio_cfg_input</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, simple_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = nrf_gpio_cfg_input &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simple_uart_config
</UL>

<P><STRONG><a name="[22b]"></a>nrf_gpio_cfg_input</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, act_password.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = nrf_gpio_cfg_input
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Card_Run
</UL>

<P><STRONG><a name="[22c]"></a>nrf_gpio_pin_read</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, act_password.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Card_Run
</UL>

<P><STRONG><a name="[230]"></a>nrf_gpio_pin_set</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, sky1311_drv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311ReadReg
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311ReadFifo
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311WriteFifo
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311WriteReg
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311WriteCmd
</UL>

<P><STRONG><a name="[22f]"></a>nrf_gpio_pin_clear</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, sky1311_drv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311ReadReg
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311ReadFifo
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311WriteFifo
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311WriteReg
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311WriteCmd
</UL>

<P><STRONG><a name="[25b]"></a>analogInit</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, sky1311t.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311WriteReg
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311Init
</UL>

<P><STRONG><a name="[25c]"></a>analogInit_A</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, sky1311t.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = analogInit_A &rArr; sky1311WriteReg &rArr; SPIByteCom &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311WriteReg
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311Init_A
</UL>

<P><STRONG><a name="[25d]"></a>analogInit_B</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, sky1311t.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = analogInit_B &rArr; sky1311WriteReg &rArr; SPIByteCom &rArr; SPI_Tranfer
</UL>
<BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311WriteReg
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311Init_B
</UL>

<P><STRONG><a name="[264]"></a>nrf_gpio_pin_set</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, sky1311t.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311RCFreqCali
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkCardRemove
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkCardInit
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkCardDeinit
</UL>

<P><STRONG><a name="[261]"></a>nrf_gpio_pin_clear</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, sky1311t.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311Reset
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkCardRemove
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkCardInit
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkCardDeinit
</UL>

<P><STRONG><a name="[263]"></a>nrf_gpio_pin_read</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, sky1311t.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311_fifo_tx
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sky1311_fifo_rx
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bitCollisionTrans
</UL>

<P><STRONG><a name="[269]"></a>nrf_gpio_pin_set</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, cardoper.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Type_B_Rrun
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Type_A_Rrun
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Type_A_Null_Key_Rrun
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeB_test
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_test
</UL>

<P><STRONG><a name="[26c]"></a>nrf_gpio_cfg_output</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, stm8_eval.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = nrf_gpio_cfg_output
</UL>
<BR>[Called By]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKY1311_SPI_Init
</UL>

<P><STRONG><a name="[26d]"></a>nrf_gpio_pin_set</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm8_eval.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKY1311_DeInit
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKY1311_Init
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKY1311_SPI_Init
</UL>

<P><STRONG><a name="[271]"></a>nrf_gpio_cfg</STRONG> (Thumb, 38 bytes, Stack size 20 bytes, mpr121.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = nrf_gpio_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GPIO_init
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_output
</UL>

<P><STRONG><a name="[270]"></a>nrf_gpio_cfg_output</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, mpr121.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = nrf_gpio_cfg_output &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GPIO_init
</UL>

<P><STRONG><a name="[272]"></a>nrf_gpio_pin_set</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, mpr121.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSM12_Init
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSM12_read_tast
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GPIO_init
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSM12_Into_Sleep_Mode
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_READ_BYTE
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WRITE_BYTE
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SEND_ACK
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WAIT_ACK
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_STOP
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_START
</UL>

<P><STRONG><a name="[275]"></a>nrf_gpio_pin_clear</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, mpr121.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSM12_Init
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSM12_Exit_Sleep_Mode
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSM12_Into_Sleep_Mode
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_READ_BYTE
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WRITE_BYTE
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SEND_ACK
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WAIT_ACK
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_STOP
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_START
</UL>

<P><STRONG><a name="[278]"></a>nrf_gpio_pin_read</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, mpr121.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_READ_BYTE
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WAIT_ACK
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
